{
  "agents": {
    "context": [
      {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "module": {
            "const": "sql",
            "default": "sql",
            "title": "Module",
            "type": "string"
          },
          "title": {
            "default": "agent",
            "title": "Title",
            "type": "string"
          },
          "rules": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Rules"
          },
          "summarize_model": {
            "default": "chatgpt-o3-mini",
            "title": "Summarize Model",
            "type": "string"
          },
          "rephrase_model": {
            "default": "chatgpt-azure-4o-mini",
            "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
            "title": "Rephrase model",
            "type": "string",
            "widget": "llm_select"
          },
          "max_retries": {
            "default": 1,
            "title": "Max Retries",
            "type": "integer"
          },
          "source": {
            "title": "Source",
            "type": "string"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Description"
          },
          "sqlschema": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Sqlschema"
          },
          "retries": {
            "default": 3,
            "title": "Retries",
            "type": "integer"
          },
          "ignore_tables": {
            "default": [],
            "items": {
              "type": "string"
            },
            "title": "Ignore Tables",
            "type": "array"
          },
          "include_tables": {
            "default": [],
            "items": {
              "type": "string"
            },
            "title": "Include Tables",
            "type": "array"
          },
          "sample_rows_in_table_info": {
            "default": 3,
            "title": "Sample Rows In Table Info",
            "type": "integer"
          },
          "indexes_in_table_info": {
            "default": false,
            "title": "Indexes In Table Info",
            "type": "boolean"
          },
          "custom_table_info": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Custom Table Info"
          },
          "view_support": {
            "default": false,
            "title": "View Support",
            "type": "boolean"
          },
          "max_string_length": {
            "default": 300,
            "title": "Max String Length",
            "type": "integer"
          },
          "lazy_table_reflection": {
            "default": false,
            "title": "Lazy Table Reflection",
            "type": "boolean"
          },
          "conversion_model": {
            "default": "chatgpt4o",
            "title": "Conversion Model",
            "type": "string"
          }
        },
        "required": ["source"],
        "title": "SQLAgentConfig",
        "type": "object"
      },
      {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "module": {
            "const": "tavily",
            "default": "tavily",
            "title": "Module",
            "type": "string"
          },
          "title": {
            "default": "agent",
            "title": "Title",
            "type": "string"
          },
          "rules": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Rules"
          },
          "summarize_model": {
            "default": "chatgpt-azure-4o-mini",
            "description": "Model used to summarize the answer",
            "title": "Summary model",
            "type": "string",
            "widget": "llm_select"
          },
          "rephrase_model": {
            "default": "chatgpt-azure-4o-mini",
            "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
            "title": "Rephrase model",
            "type": "string",
            "widget": "llm_select"
          },
          "max_retries": {
            "default": 1,
            "title": "Max Retries",
            "type": "integer"
          },
          "domains": {
            "items": {
              "type": "string"
            },
            "title": "Domains",
            "type": "array"
          },
          "source": {
            "default": "tavily",
            "title": "Source",
            "type": "string"
          }
        },
        "title": "TavilyAgentConfig",
        "type": "object"
      },
      {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "module": {
            "const": "restricted",
            "default": "restricted",
            "title": "Module",
            "type": "string"
          },
          "title": {
            "default": "agent",
            "title": "Title",
            "type": "string"
          },
          "rules": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Rules"
          },
          "summarize_model": {
            "default": "chatgpt-azure-4o-mini",
            "description": "Model used to summarize the answer",
            "title": "Summary model",
            "type": "string",
            "widget": "llm_select"
          },
          "rephrase_model": {
            "default": "chatgpt-azure-4o-mini",
            "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
            "title": "Rephrase model",
            "type": "string",
            "widget": "llm_select"
          },
          "max_retries": {
            "default": 1,
            "title": "Max Retries",
            "type": "integer"
          },
          "code": {
            "title": "Code",
            "type": "string"
          }
        },
        "required": ["code"],
        "title": "PythonAgentConfig",
        "type": "object"
      },
      {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "module": {
            "const": "perplexity",
            "default": "perplexity",
            "title": "Module",
            "type": "string"
          },
          "title": {
            "default": "agent",
            "title": "Title",
            "type": "string"
          },
          "rules": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Rules"
          },
          "summarize_model": {
            "default": "chatgpt-azure-4o-mini",
            "description": "Model used to summarize the answer",
            "title": "Summary model",
            "type": "string",
            "widget": "llm_select"
          },
          "rephrase_model": {
            "default": "chatgpt-azure-4o-mini",
            "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
            "title": "Rephrase model",
            "type": "string",
            "widget": "llm_select"
          },
          "max_retries": {
            "default": 1,
            "title": "Max Retries",
            "type": "integer"
          },
          "domain": {
            "description": "Domains to restrict the Perplexity search to.",
            "items": {
              "type": "string"
            },
            "title": "Domain Filter",
            "type": "array"
          },
          "search_context_size": {
            "default": "low",
            "description": "Determines how much search context Perplexity retrieves for the model. Options are: `low` (minimizes context for cost savings but less comprehensive answers), `medium` (balanced approach suitable for most queries), and `high` (maximizes context for comprehensive answers but at higher cost).",
            "enum": ["low", "medium", "high"],
            "title": "Search Context Size",
            "type": "string"
          },
          "related_questions": {
            "default": false,
            "description": "Determines if Perplexity should return related questions to the original. They will be stored in the Agentic Memory as future questions",
            "title": "Generate Related Questions",
            "type": "boolean"
          },
          "images": {
            "default": false,
            "description": "Determines whether Perplexity search results should include images.",
            "title": "Return Images",
            "type": "boolean"
          },
          "source": {
            "default": "perplexity",
            "title": "Source",
            "type": "string"
          }
        },
        "title": "PerplexityAgentConfig",
        "type": "object"
      },
      {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "module": {
            "const": "google",
            "default": "google",
            "title": "Module",
            "type": "string"
          },
          "title": {
            "default": "agent",
            "title": "Title",
            "type": "string"
          },
          "rules": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Rules"
          },
          "summarize_model": {
            "default": "chatgpt-azure-4o-mini",
            "description": "Model used to summarize the answer",
            "title": "Summary model",
            "type": "string",
            "widget": "llm_select"
          },
          "rephrase_model": {
            "default": "chatgpt-azure-4o-mini",
            "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
            "title": "Rephrase model",
            "type": "string",
            "widget": "llm_select"
          },
          "max_retries": {
            "default": 1,
            "title": "Max Retries",
            "type": "integer"
          },
          "gen_model_id": {
            "default": "gemini-2.5-flash",
            "title": "Gen Model Id",
            "type": "string"
          },
          "source": {
            "default": "google",
            "title": "Source",
            "type": "string"
          }
        },
        "title": "GoogleAgentConfig",
        "type": "object"
      },
      {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "module": {
            "const": "brave",
            "default": "brave",
            "title": "Module",
            "type": "string"
          },
          "title": {
            "default": "agent",
            "title": "Title",
            "type": "string"
          },
          "rules": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Rules"
          },
          "summarize_model": {
            "default": "chatgpt-azure-4o-mini",
            "description": "Model used to summarize the answer",
            "title": "Summary model",
            "type": "string",
            "widget": "llm_select"
          },
          "rephrase_model": {
            "default": "chatgpt-azure-4o-mini",
            "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
            "title": "Rephrase model",
            "type": "string",
            "widget": "llm_select"
          },
          "max_retries": {
            "default": 1,
            "title": "Max Retries",
            "type": "integer"
          },
          "domain": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Domain"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Country"
          },
          "source": {
            "default": "brave",
            "title": "Source",
            "type": "string"
          }
        },
        "title": "BraveAgentConfig",
        "type": "object"
      },
      {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "module": {
            "const": "cypher",
            "default": "cypher",
            "title": "Module",
            "type": "string"
          },
          "title": {
            "default": "agent",
            "title": "Title",
            "type": "string"
          },
          "rules": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Rules"
          },
          "summarize_model": {
            "default": "chatgpt-azure-4o-mini",
            "description": "Model used to summarize the answer",
            "title": "Summary model",
            "type": "string",
            "widget": "llm_select"
          },
          "rephrase_model": {
            "default": "chatgpt-azure-4o-mini",
            "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
            "title": "Rephrase model",
            "type": "string",
            "widget": "llm_select"
          },
          "max_retries": {
            "default": 1,
            "title": "Max Retries",
            "type": "integer"
          },
          "source": {
            "title": "Source",
            "type": "string"
          },
          "exclude_types": {
            "items": {
              "type": "string"
            },
            "title": "Exclude Types",
            "type": "array"
          },
          "include_types": {
            "items": {
              "type": "string"
            },
            "title": "Include Types",
            "type": "array"
          },
          "allow_dangerous_requests": {
            "default": true,
            "title": "Allow Dangerous Requests",
            "type": "boolean"
          },
          "top_k": {
            "default": 10,
            "title": "Top K",
            "type": "integer"
          },
          "model": {
            "default": "gemini-2.5-flash-lite",
            "title": "Model",
            "type": "string"
          }
        },
        "required": ["source"],
        "title": "CypherAgentConfig",
        "type": "object"
      },
      {
        "$defs": {
          "AskAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "ask",
                "default": "ask",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "fallback": {
                "anyOf": [
                  {
                    "discriminator": {
                      "mapping": {
                        "ask": "#/$defs/AskAgentConfig",
                        "basic_ask": "#/$defs/BasicAskAgentConfig",
                        "brave": "#/$defs/BraveAgentConfig",
                        "context_conditional": "#/$defs/ContextConditionalAgentConfig",
                        "cypher": "#/$defs/CypherAgentConfig",
                        "google": "#/$defs/GoogleAgentConfig",
                        "mcp": "#/$defs/MCPAgentConfig",
                        "perplexity": "#/$defs/PerplexityAgentConfig",
                        "restricted": "#/$defs/PythonAgentConfig",
                        "sparql": "#/$defs/SPARQLAgentConfig",
                        "sql": "#/$defs/SQLAgentConfig",
                        "tavily": "#/$defs/TavilyAgentConfig"
                      },
                      "propertyName": "module"
                    },
                    "oneOf": [
                      {
                        "$ref": "#/$defs/SQLAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/TavilyAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/PythonAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/PerplexityAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/GoogleAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/BraveAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/CypherAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/AskAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/BasicAskAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/ContextConditionalAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/SPARQLAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/MCPAgentConfig"
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Fallback"
              },
              "pre_queries": {
                "items": {
                  "type": "string"
                },
                "title": "Pre Queries",
                "type": "array"
              },
              "filters": {
                "items": {
                  "type": "string"
                },
                "title": "Filters",
                "type": "array"
              },
              "security_groups": {
                "items": {
                  "type": "string"
                },
                "title": "Security Groups",
                "type": "array"
              },
              "rephrase_semantic_custom_prompt": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rephrase Semantic Custom Prompt"
              },
              "rephrase_lexical_custom_prompt": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rephrase Lexical Custom Prompt"
              },
              "keywords_custom_prompt": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Keywords Custom Prompt"
              },
              "visual_enable_prompt": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Visual Enable Prompt"
              },
              "date_range_enabled": {
                "default": false,
                "title": "Date Range Enabled",
                "type": "boolean"
              },
              "before": {
                "default": 2,
                "title": "Before",
                "type": "integer"
              },
              "after": {
                "default": 2,
                "title": "After",
                "type": "integer"
              },
              "top_k": {
                "default": 20,
                "title": "Top K",
                "type": "integer"
              },
              "extra_fields": {
                "default": [],
                "items": {
                  "type": "string"
                },
                "title": "Extra Fields",
                "type": "array"
              },
              "full_resource": {
                "default": false,
                "title": "Full Resource",
                "type": "boolean"
              },
              "vllm": {
                "default": true,
                "title": "Vllm",
                "type": "boolean"
              },
              "query_entities": {
                "items": {
                  "$ref": "#/$defs/KnowledgeGraphEntity"
                },
                "title": "Query Entities",
                "type": "array"
              },
              "retrieve_related": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Retrieve Related"
              },
              "sources": {
                "items": {
                  "type": "string"
                },
                "title": "Sources",
                "type": "array"
              },
              "configuration_model": {
                "default": "gemini-2.5-flash",
                "title": "Configuration Model",
                "type": "string"
              },
              "fast_answer": {
                "default": true,
                "title": "Fast Answer",
                "type": "boolean"
              },
              "ai_parameter_search": {
                "default": true,
                "title": "Ai Parameter Search",
                "type": "boolean"
              }
            },
            "title": "AskAgentConfig",
            "type": "object"
          },
          "BasicAskAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "basic_ask",
                "default": "basic_ask",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "fallback": {
                "anyOf": [
                  {
                    "discriminator": {
                      "mapping": {
                        "ask": "#/$defs/AskAgentConfig",
                        "basic_ask": "#/$defs/BasicAskAgentConfig",
                        "brave": "#/$defs/BraveAgentConfig",
                        "context_conditional": "#/$defs/ContextConditionalAgentConfig",
                        "cypher": "#/$defs/CypherAgentConfig",
                        "google": "#/$defs/GoogleAgentConfig",
                        "mcp": "#/$defs/MCPAgentConfig",
                        "perplexity": "#/$defs/PerplexityAgentConfig",
                        "restricted": "#/$defs/PythonAgentConfig",
                        "sparql": "#/$defs/SPARQLAgentConfig",
                        "sql": "#/$defs/SQLAgentConfig",
                        "tavily": "#/$defs/TavilyAgentConfig"
                      },
                      "propertyName": "module"
                    },
                    "oneOf": [
                      {
                        "$ref": "#/$defs/SQLAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/TavilyAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/PythonAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/PerplexityAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/GoogleAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/BraveAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/CypherAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/AskAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/BasicAskAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/ContextConditionalAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/SPARQLAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/MCPAgentConfig"
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Fallback"
              },
              "sources": {
                "items": {
                  "type": "string"
                },
                "title": "Sources",
                "type": "array"
              },
              "generative_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to generate answers",
                "title": "Generative model",
                "type": "string",
                "widget": "llm_select"
              }
            },
            "title": "BasicAskAgentConfig",
            "type": "object"
          },
          "BraveAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "brave",
                "default": "brave",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "domain": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Domain"
              },
              "country": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Country"
              },
              "source": {
                "default": "brave",
                "title": "Source",
                "type": "string"
              }
            },
            "title": "BraveAgentConfig",
            "type": "object"
          },
          "ContextConditionalAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "context_conditional",
                "default": "context_conditional",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "then": {
                "description": "List of agents to run in case the condition is  valid",
                "items": {
                  "discriminator": {
                    "mapping": {
                      "ask": "#/$defs/AskAgentConfig",
                      "basic_ask": "#/$defs/BasicAskAgentConfig",
                      "brave": "#/$defs/BraveAgentConfig",
                      "context_conditional": "#/$defs/ContextConditionalAgentConfig",
                      "cypher": "#/$defs/CypherAgentConfig",
                      "google": "#/$defs/GoogleAgentConfig",
                      "mcp": "#/$defs/MCPAgentConfig",
                      "perplexity": "#/$defs/PerplexityAgentConfig",
                      "restricted": "#/$defs/PythonAgentConfig",
                      "sparql": "#/$defs/SPARQLAgentConfig",
                      "sql": "#/$defs/SQLAgentConfig",
                      "tavily": "#/$defs/TavilyAgentConfig"
                    },
                    "propertyName": "module"
                  },
                  "oneOf": [
                    {
                      "$ref": "#/$defs/SQLAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/TavilyAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PythonAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PerplexityAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/GoogleAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/BraveAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/CypherAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/AskAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/BasicAskAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/ContextConditionalAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/SPARQLAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/MCPAgentConfig"
                    }
                  ]
                },
                "title": "IF agents",
                "type": "array"
              },
              "else_": {
                "description": "List of agents to run in case the condition is not valid",
                "items": {
                  "discriminator": {
                    "mapping": {
                      "ask": "#/$defs/AskAgentConfig",
                      "basic_ask": "#/$defs/BasicAskAgentConfig",
                      "brave": "#/$defs/BraveAgentConfig",
                      "context_conditional": "#/$defs/ContextConditionalAgentConfig",
                      "cypher": "#/$defs/CypherAgentConfig",
                      "google": "#/$defs/GoogleAgentConfig",
                      "mcp": "#/$defs/MCPAgentConfig",
                      "perplexity": "#/$defs/PerplexityAgentConfig",
                      "restricted": "#/$defs/PythonAgentConfig",
                      "sparql": "#/$defs/SPARQLAgentConfig",
                      "sql": "#/$defs/SQLAgentConfig",
                      "tavily": "#/$defs/TavilyAgentConfig"
                    },
                    "propertyName": "module"
                  },
                  "oneOf": [
                    {
                      "$ref": "#/$defs/SQLAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/TavilyAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PythonAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PerplexityAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/GoogleAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/BraveAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/CypherAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/AskAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/BasicAskAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/ContextConditionalAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/SPARQLAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/MCPAgentConfig"
                    }
                  ]
                },
                "title": "Else agents",
                "type": "array"
              },
              "prompt": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Prompt"
              },
              "has_keywords": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Has Keywords"
              },
              "similarity": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Similarity"
              },
              "on": {
                "$ref": "#/$defs/Source",
                "default": "QUESTION"
              },
              "model": {
                "default": "chatgpt-o3-mini",
                "title": "Model",
                "type": "string"
              }
            },
            "title": "ContextConditionalAgentConfig",
            "type": "object"
          },
          "CypherAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "cypher",
                "default": "cypher",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "source": {
                "title": "Source",
                "type": "string"
              },
              "exclude_types": {
                "items": {
                  "type": "string"
                },
                "title": "Exclude Types",
                "type": "array"
              },
              "include_types": {
                "items": {
                  "type": "string"
                },
                "title": "Include Types",
                "type": "array"
              },
              "allow_dangerous_requests": {
                "default": true,
                "title": "Allow Dangerous Requests",
                "type": "boolean"
              },
              "top_k": {
                "default": 10,
                "title": "Top K",
                "type": "integer"
              },
              "model": {
                "default": "gemini-2.5-flash-lite",
                "title": "Model",
                "type": "string"
              }
            },
            "required": ["source"],
            "title": "CypherAgentConfig",
            "type": "object"
          },
          "GoogleAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "google",
                "default": "google",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "gen_model_id": {
                "default": "gemini-2.5-flash",
                "title": "Gen Model Id",
                "type": "string"
              },
              "source": {
                "default": "google",
                "title": "Source",
                "type": "string"
              }
            },
            "title": "GoogleAgentConfig",
            "type": "object"
          },
          "KnowledgeGraphEntity": {
            "properties": {
              "name": {
                "title": "Name",
                "type": "string"
              },
              "type": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/RelationNodeType"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "subtype": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Subtype"
              }
            },
            "required": ["name"],
            "title": "KnowledgeGraphEntity",
            "type": "object"
          },
          "MCPAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "mcp",
                "default": "mcp",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "transport": {
                "$ref": "#/$defs/Transport",
                "default": "SSE",
                "title": "Proper transport mechanism"
              },
              "source": {
                "title": "Source",
                "type": "string"
              },
              "tool_choice_model": {
                "default": "chatgpt-4.1",
                "title": "Tool Choice Model",
                "type": "string"
              },
              "fallback": {
                "anyOf": [
                  {
                    "discriminator": {
                      "mapping": {
                        "ask": "#/$defs/AskAgentConfig",
                        "basic_ask": "#/$defs/BasicAskAgentConfig",
                        "brave": "#/$defs/BraveAgentConfig",
                        "context_conditional": "#/$defs/ContextConditionalAgentConfig",
                        "cypher": "#/$defs/CypherAgentConfig",
                        "google": "#/$defs/GoogleAgentConfig",
                        "mcp": "#/$defs/MCPAgentConfig",
                        "perplexity": "#/$defs/PerplexityAgentConfig",
                        "restricted": "#/$defs/PythonAgentConfig",
                        "sparql": "#/$defs/SPARQLAgentConfig",
                        "sql": "#/$defs/SQLAgentConfig",
                        "tavily": "#/$defs/TavilyAgentConfig"
                      },
                      "propertyName": "module"
                    },
                    "oneOf": [
                      {
                        "$ref": "#/$defs/SQLAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/TavilyAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/PythonAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/PerplexityAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/GoogleAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/BraveAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/CypherAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/AskAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/BasicAskAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/ContextConditionalAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/SPARQLAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/MCPAgentConfig"
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Fallback"
              },
              "valid_headers": {
                "items": {
                  "type": "string"
                },
                "title": "Valid headers to forward to the agent",
                "type": "array"
              },
              "read_timeout_seconds": {
                "default": 400,
                "title": "Read timeout in seconds",
                "type": "integer"
              },
              "roots": {
                "additionalProperties": {
                  "type": "string"
                },
                "title": "Available roots format name: url}",
                "type": "object"
              },
              "interaction": {
                "default": false,
                "title": "Enable interaction with the user",
                "type": "boolean"
              },
              "feedback_timeout": {
                "default": 10000,
                "title": "Feedback timeout in milliseconds",
                "type": "integer"
              },
              "progress_feedback": {
                "default": true,
                "title": "Enable progress feedback",
                "type": "boolean"
              },
              "work_chain": {
                "default": true,
                "title": "Enable loop on tool",
                "type": "boolean"
              },
              "max_turns": {
                "default": 5,
                "title": "Maximum number of tool calls before stopping",
                "type": "integer"
              },
              "sampling_model": {
                "default": "gemini-2.5-flash",
                "title": "Sampling Model",
                "type": "string"
              }
            },
            "required": ["source"],
            "title": "MCPAgentConfig",
            "type": "object"
          },
          "PerplexityAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "perplexity",
                "default": "perplexity",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "domain": {
                "description": "Domains to restrict the Perplexity search to.",
                "items": {
                  "type": "string"
                },
                "title": "Domain Filter",
                "type": "array"
              },
              "search_context_size": {
                "default": "low",
                "description": "Determines how much search context Perplexity retrieves for the model. Options are: `low` (minimizes context for cost savings but less comprehensive answers), `medium` (balanced approach suitable for most queries), and `high` (maximizes context for comprehensive answers but at higher cost).",
                "enum": ["low", "medium", "high"],
                "title": "Search Context Size",
                "type": "string"
              },
              "related_questions": {
                "default": false,
                "description": "Determines if Perplexity should return related questions to the original. They will be stored in the Agentic Memory as future questions",
                "title": "Generate Related Questions",
                "type": "boolean"
              },
              "images": {
                "default": false,
                "description": "Determines whether Perplexity search results should include images.",
                "title": "Return Images",
                "type": "boolean"
              },
              "source": {
                "default": "perplexity",
                "title": "Source",
                "type": "string"
              }
            },
            "title": "PerplexityAgentConfig",
            "type": "object"
          },
          "PythonAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "restricted",
                "default": "restricted",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "code": {
                "title": "Code",
                "type": "string"
              }
            },
            "required": ["code"],
            "title": "PythonAgentConfig",
            "type": "object"
          },
          "RelationNodeType": {
            "enum": ["entity", "label", "resource", "user"],
            "title": "RelationNodeType",
            "type": "string"
          },
          "SPARQLAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "sparql",
                "default": "sparql",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              }
            },
            "title": "SPARQLAgentConfig",
            "type": "object"
          },
          "SQLAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "sql",
                "default": "sql",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-o3-mini",
                "title": "Summarize Model",
                "type": "string"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "source": {
                "title": "Source",
                "type": "string"
              },
              "description": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Description"
              },
              "sqlschema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Sqlschema"
              },
              "retries": {
                "default": 3,
                "title": "Retries",
                "type": "integer"
              },
              "ignore_tables": {
                "default": [],
                "items": {
                  "type": "string"
                },
                "title": "Ignore Tables",
                "type": "array"
              },
              "include_tables": {
                "default": [],
                "items": {
                  "type": "string"
                },
                "title": "Include Tables",
                "type": "array"
              },
              "sample_rows_in_table_info": {
                "default": 3,
                "title": "Sample Rows In Table Info",
                "type": "integer"
              },
              "indexes_in_table_info": {
                "default": false,
                "title": "Indexes In Table Info",
                "type": "boolean"
              },
              "custom_table_info": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Custom Table Info"
              },
              "view_support": {
                "default": false,
                "title": "View Support",
                "type": "boolean"
              },
              "max_string_length": {
                "default": 300,
                "title": "Max String Length",
                "type": "integer"
              },
              "lazy_table_reflection": {
                "default": false,
                "title": "Lazy Table Reflection",
                "type": "boolean"
              },
              "conversion_model": {
                "default": "chatgpt4o",
                "title": "Conversion Model",
                "type": "string"
              }
            },
            "required": ["source"],
            "title": "SQLAgentConfig",
            "type": "object"
          },
          "Source": {
            "enum": ["QUESTION", "ANSWER", "CONTEXT"],
            "title": "Source",
            "type": "string"
          },
          "TavilyAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "tavily",
                "default": "tavily",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "domains": {
                "items": {
                  "type": "string"
                },
                "title": "Domains",
                "type": "array"
              },
              "source": {
                "default": "tavily",
                "title": "Source",
                "type": "string"
              }
            },
            "title": "TavilyAgentConfig",
            "type": "object"
          },
          "Transport": {
            "enum": ["SSE", "STDIO", "HTTP"],
            "title": "Transport",
            "type": "string"
          }
        },
        "$ref": "#/$defs/AskAgentConfig"
      },
      {
        "$defs": {
          "AskAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "ask",
                "default": "ask",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "fallback": {
                "anyOf": [
                  {
                    "discriminator": {
                      "mapping": {
                        "ask": "#/$defs/AskAgentConfig",
                        "basic_ask": "#/$defs/BasicAskAgentConfig",
                        "brave": "#/$defs/BraveAgentConfig",
                        "context_conditional": "#/$defs/ContextConditionalAgentConfig",
                        "cypher": "#/$defs/CypherAgentConfig",
                        "google": "#/$defs/GoogleAgentConfig",
                        "mcp": "#/$defs/MCPAgentConfig",
                        "perplexity": "#/$defs/PerplexityAgentConfig",
                        "restricted": "#/$defs/PythonAgentConfig",
                        "sparql": "#/$defs/SPARQLAgentConfig",
                        "sql": "#/$defs/SQLAgentConfig",
                        "tavily": "#/$defs/TavilyAgentConfig"
                      },
                      "propertyName": "module"
                    },
                    "oneOf": [
                      {
                        "$ref": "#/$defs/SQLAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/TavilyAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/PythonAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/PerplexityAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/GoogleAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/BraveAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/CypherAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/AskAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/BasicAskAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/ContextConditionalAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/SPARQLAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/MCPAgentConfig"
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Fallback"
              },
              "pre_queries": {
                "items": {
                  "type": "string"
                },
                "title": "Pre Queries",
                "type": "array"
              },
              "filters": {
                "items": {
                  "type": "string"
                },
                "title": "Filters",
                "type": "array"
              },
              "security_groups": {
                "items": {
                  "type": "string"
                },
                "title": "Security Groups",
                "type": "array"
              },
              "rephrase_semantic_custom_prompt": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rephrase Semantic Custom Prompt"
              },
              "rephrase_lexical_custom_prompt": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rephrase Lexical Custom Prompt"
              },
              "keywords_custom_prompt": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Keywords Custom Prompt"
              },
              "visual_enable_prompt": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Visual Enable Prompt"
              },
              "date_range_enabled": {
                "default": false,
                "title": "Date Range Enabled",
                "type": "boolean"
              },
              "before": {
                "default": 2,
                "title": "Before",
                "type": "integer"
              },
              "after": {
                "default": 2,
                "title": "After",
                "type": "integer"
              },
              "top_k": {
                "default": 20,
                "title": "Top K",
                "type": "integer"
              },
              "extra_fields": {
                "default": [],
                "items": {
                  "type": "string"
                },
                "title": "Extra Fields",
                "type": "array"
              },
              "full_resource": {
                "default": false,
                "title": "Full Resource",
                "type": "boolean"
              },
              "vllm": {
                "default": true,
                "title": "Vllm",
                "type": "boolean"
              },
              "query_entities": {
                "items": {
                  "$ref": "#/$defs/KnowledgeGraphEntity"
                },
                "title": "Query Entities",
                "type": "array"
              },
              "retrieve_related": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Retrieve Related"
              },
              "sources": {
                "items": {
                  "type": "string"
                },
                "title": "Sources",
                "type": "array"
              },
              "configuration_model": {
                "default": "gemini-2.5-flash",
                "title": "Configuration Model",
                "type": "string"
              },
              "fast_answer": {
                "default": true,
                "title": "Fast Answer",
                "type": "boolean"
              },
              "ai_parameter_search": {
                "default": true,
                "title": "Ai Parameter Search",
                "type": "boolean"
              }
            },
            "title": "AskAgentConfig",
            "type": "object"
          },
          "BasicAskAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "basic_ask",
                "default": "basic_ask",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "fallback": {
                "anyOf": [
                  {
                    "discriminator": {
                      "mapping": {
                        "ask": "#/$defs/AskAgentConfig",
                        "basic_ask": "#/$defs/BasicAskAgentConfig",
                        "brave": "#/$defs/BraveAgentConfig",
                        "context_conditional": "#/$defs/ContextConditionalAgentConfig",
                        "cypher": "#/$defs/CypherAgentConfig",
                        "google": "#/$defs/GoogleAgentConfig",
                        "mcp": "#/$defs/MCPAgentConfig",
                        "perplexity": "#/$defs/PerplexityAgentConfig",
                        "restricted": "#/$defs/PythonAgentConfig",
                        "sparql": "#/$defs/SPARQLAgentConfig",
                        "sql": "#/$defs/SQLAgentConfig",
                        "tavily": "#/$defs/TavilyAgentConfig"
                      },
                      "propertyName": "module"
                    },
                    "oneOf": [
                      {
                        "$ref": "#/$defs/SQLAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/TavilyAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/PythonAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/PerplexityAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/GoogleAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/BraveAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/CypherAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/AskAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/BasicAskAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/ContextConditionalAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/SPARQLAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/MCPAgentConfig"
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Fallback"
              },
              "sources": {
                "items": {
                  "type": "string"
                },
                "title": "Sources",
                "type": "array"
              },
              "generative_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to generate answers",
                "title": "Generative model",
                "type": "string",
                "widget": "llm_select"
              }
            },
            "title": "BasicAskAgentConfig",
            "type": "object"
          },
          "BraveAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "brave",
                "default": "brave",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "domain": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Domain"
              },
              "country": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Country"
              },
              "source": {
                "default": "brave",
                "title": "Source",
                "type": "string"
              }
            },
            "title": "BraveAgentConfig",
            "type": "object"
          },
          "ContextConditionalAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "context_conditional",
                "default": "context_conditional",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "then": {
                "description": "List of agents to run in case the condition is  valid",
                "items": {
                  "discriminator": {
                    "mapping": {
                      "ask": "#/$defs/AskAgentConfig",
                      "basic_ask": "#/$defs/BasicAskAgentConfig",
                      "brave": "#/$defs/BraveAgentConfig",
                      "context_conditional": "#/$defs/ContextConditionalAgentConfig",
                      "cypher": "#/$defs/CypherAgentConfig",
                      "google": "#/$defs/GoogleAgentConfig",
                      "mcp": "#/$defs/MCPAgentConfig",
                      "perplexity": "#/$defs/PerplexityAgentConfig",
                      "restricted": "#/$defs/PythonAgentConfig",
                      "sparql": "#/$defs/SPARQLAgentConfig",
                      "sql": "#/$defs/SQLAgentConfig",
                      "tavily": "#/$defs/TavilyAgentConfig"
                    },
                    "propertyName": "module"
                  },
                  "oneOf": [
                    {
                      "$ref": "#/$defs/SQLAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/TavilyAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PythonAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PerplexityAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/GoogleAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/BraveAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/CypherAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/AskAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/BasicAskAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/ContextConditionalAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/SPARQLAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/MCPAgentConfig"
                    }
                  ]
                },
                "title": "IF agents",
                "type": "array"
              },
              "else_": {
                "description": "List of agents to run in case the condition is not valid",
                "items": {
                  "discriminator": {
                    "mapping": {
                      "ask": "#/$defs/AskAgentConfig",
                      "basic_ask": "#/$defs/BasicAskAgentConfig",
                      "brave": "#/$defs/BraveAgentConfig",
                      "context_conditional": "#/$defs/ContextConditionalAgentConfig",
                      "cypher": "#/$defs/CypherAgentConfig",
                      "google": "#/$defs/GoogleAgentConfig",
                      "mcp": "#/$defs/MCPAgentConfig",
                      "perplexity": "#/$defs/PerplexityAgentConfig",
                      "restricted": "#/$defs/PythonAgentConfig",
                      "sparql": "#/$defs/SPARQLAgentConfig",
                      "sql": "#/$defs/SQLAgentConfig",
                      "tavily": "#/$defs/TavilyAgentConfig"
                    },
                    "propertyName": "module"
                  },
                  "oneOf": [
                    {
                      "$ref": "#/$defs/SQLAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/TavilyAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PythonAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PerplexityAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/GoogleAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/BraveAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/CypherAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/AskAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/BasicAskAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/ContextConditionalAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/SPARQLAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/MCPAgentConfig"
                    }
                  ]
                },
                "title": "Else agents",
                "type": "array"
              },
              "prompt": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Prompt"
              },
              "has_keywords": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Has Keywords"
              },
              "similarity": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Similarity"
              },
              "on": {
                "$ref": "#/$defs/Source",
                "default": "QUESTION"
              },
              "model": {
                "default": "chatgpt-o3-mini",
                "title": "Model",
                "type": "string"
              }
            },
            "title": "ContextConditionalAgentConfig",
            "type": "object"
          },
          "CypherAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "cypher",
                "default": "cypher",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "source": {
                "title": "Source",
                "type": "string"
              },
              "exclude_types": {
                "items": {
                  "type": "string"
                },
                "title": "Exclude Types",
                "type": "array"
              },
              "include_types": {
                "items": {
                  "type": "string"
                },
                "title": "Include Types",
                "type": "array"
              },
              "allow_dangerous_requests": {
                "default": true,
                "title": "Allow Dangerous Requests",
                "type": "boolean"
              },
              "top_k": {
                "default": 10,
                "title": "Top K",
                "type": "integer"
              },
              "model": {
                "default": "gemini-2.5-flash-lite",
                "title": "Model",
                "type": "string"
              }
            },
            "required": ["source"],
            "title": "CypherAgentConfig",
            "type": "object"
          },
          "GoogleAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "google",
                "default": "google",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "gen_model_id": {
                "default": "gemini-2.5-flash",
                "title": "Gen Model Id",
                "type": "string"
              },
              "source": {
                "default": "google",
                "title": "Source",
                "type": "string"
              }
            },
            "title": "GoogleAgentConfig",
            "type": "object"
          },
          "KnowledgeGraphEntity": {
            "properties": {
              "name": {
                "title": "Name",
                "type": "string"
              },
              "type": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/RelationNodeType"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "subtype": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Subtype"
              }
            },
            "required": ["name"],
            "title": "KnowledgeGraphEntity",
            "type": "object"
          },
          "MCPAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "mcp",
                "default": "mcp",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "transport": {
                "$ref": "#/$defs/Transport",
                "default": "SSE",
                "title": "Proper transport mechanism"
              },
              "source": {
                "title": "Source",
                "type": "string"
              },
              "tool_choice_model": {
                "default": "chatgpt-4.1",
                "title": "Tool Choice Model",
                "type": "string"
              },
              "fallback": {
                "anyOf": [
                  {
                    "discriminator": {
                      "mapping": {
                        "ask": "#/$defs/AskAgentConfig",
                        "basic_ask": "#/$defs/BasicAskAgentConfig",
                        "brave": "#/$defs/BraveAgentConfig",
                        "context_conditional": "#/$defs/ContextConditionalAgentConfig",
                        "cypher": "#/$defs/CypherAgentConfig",
                        "google": "#/$defs/GoogleAgentConfig",
                        "mcp": "#/$defs/MCPAgentConfig",
                        "perplexity": "#/$defs/PerplexityAgentConfig",
                        "restricted": "#/$defs/PythonAgentConfig",
                        "sparql": "#/$defs/SPARQLAgentConfig",
                        "sql": "#/$defs/SQLAgentConfig",
                        "tavily": "#/$defs/TavilyAgentConfig"
                      },
                      "propertyName": "module"
                    },
                    "oneOf": [
                      {
                        "$ref": "#/$defs/SQLAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/TavilyAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/PythonAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/PerplexityAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/GoogleAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/BraveAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/CypherAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/AskAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/BasicAskAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/ContextConditionalAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/SPARQLAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/MCPAgentConfig"
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Fallback"
              },
              "valid_headers": {
                "items": {
                  "type": "string"
                },
                "title": "Valid headers to forward to the agent",
                "type": "array"
              },
              "read_timeout_seconds": {
                "default": 400,
                "title": "Read timeout in seconds",
                "type": "integer"
              },
              "roots": {
                "additionalProperties": {
                  "type": "string"
                },
                "title": "Available roots format name: url}",
                "type": "object"
              },
              "interaction": {
                "default": false,
                "title": "Enable interaction with the user",
                "type": "boolean"
              },
              "feedback_timeout": {
                "default": 10000,
                "title": "Feedback timeout in milliseconds",
                "type": "integer"
              },
              "progress_feedback": {
                "default": true,
                "title": "Enable progress feedback",
                "type": "boolean"
              },
              "work_chain": {
                "default": true,
                "title": "Enable loop on tool",
                "type": "boolean"
              },
              "max_turns": {
                "default": 5,
                "title": "Maximum number of tool calls before stopping",
                "type": "integer"
              },
              "sampling_model": {
                "default": "gemini-2.5-flash",
                "title": "Sampling Model",
                "type": "string"
              }
            },
            "required": ["source"],
            "title": "MCPAgentConfig",
            "type": "object"
          },
          "PerplexityAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "perplexity",
                "default": "perplexity",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "domain": {
                "description": "Domains to restrict the Perplexity search to.",
                "items": {
                  "type": "string"
                },
                "title": "Domain Filter",
                "type": "array"
              },
              "search_context_size": {
                "default": "low",
                "description": "Determines how much search context Perplexity retrieves for the model. Options are: `low` (minimizes context for cost savings but less comprehensive answers), `medium` (balanced approach suitable for most queries), and `high` (maximizes context for comprehensive answers but at higher cost).",
                "enum": ["low", "medium", "high"],
                "title": "Search Context Size",
                "type": "string"
              },
              "related_questions": {
                "default": false,
                "description": "Determines if Perplexity should return related questions to the original. They will be stored in the Agentic Memory as future questions",
                "title": "Generate Related Questions",
                "type": "boolean"
              },
              "images": {
                "default": false,
                "description": "Determines whether Perplexity search results should include images.",
                "title": "Return Images",
                "type": "boolean"
              },
              "source": {
                "default": "perplexity",
                "title": "Source",
                "type": "string"
              }
            },
            "title": "PerplexityAgentConfig",
            "type": "object"
          },
          "PythonAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "restricted",
                "default": "restricted",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "code": {
                "title": "Code",
                "type": "string"
              }
            },
            "required": ["code"],
            "title": "PythonAgentConfig",
            "type": "object"
          },
          "RelationNodeType": {
            "enum": ["entity", "label", "resource", "user"],
            "title": "RelationNodeType",
            "type": "string"
          },
          "SPARQLAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "sparql",
                "default": "sparql",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              }
            },
            "title": "SPARQLAgentConfig",
            "type": "object"
          },
          "SQLAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "sql",
                "default": "sql",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-o3-mini",
                "title": "Summarize Model",
                "type": "string"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "source": {
                "title": "Source",
                "type": "string"
              },
              "description": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Description"
              },
              "sqlschema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Sqlschema"
              },
              "retries": {
                "default": 3,
                "title": "Retries",
                "type": "integer"
              },
              "ignore_tables": {
                "default": [],
                "items": {
                  "type": "string"
                },
                "title": "Ignore Tables",
                "type": "array"
              },
              "include_tables": {
                "default": [],
                "items": {
                  "type": "string"
                },
                "title": "Include Tables",
                "type": "array"
              },
              "sample_rows_in_table_info": {
                "default": 3,
                "title": "Sample Rows In Table Info",
                "type": "integer"
              },
              "indexes_in_table_info": {
                "default": false,
                "title": "Indexes In Table Info",
                "type": "boolean"
              },
              "custom_table_info": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Custom Table Info"
              },
              "view_support": {
                "default": false,
                "title": "View Support",
                "type": "boolean"
              },
              "max_string_length": {
                "default": 300,
                "title": "Max String Length",
                "type": "integer"
              },
              "lazy_table_reflection": {
                "default": false,
                "title": "Lazy Table Reflection",
                "type": "boolean"
              },
              "conversion_model": {
                "default": "chatgpt4o",
                "title": "Conversion Model",
                "type": "string"
              }
            },
            "required": ["source"],
            "title": "SQLAgentConfig",
            "type": "object"
          },
          "Source": {
            "enum": ["QUESTION", "ANSWER", "CONTEXT"],
            "title": "Source",
            "type": "string"
          },
          "TavilyAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "tavily",
                "default": "tavily",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "domains": {
                "items": {
                  "type": "string"
                },
                "title": "Domains",
                "type": "array"
              },
              "source": {
                "default": "tavily",
                "title": "Source",
                "type": "string"
              }
            },
            "title": "TavilyAgentConfig",
            "type": "object"
          },
          "Transport": {
            "enum": ["SSE", "STDIO", "HTTP"],
            "title": "Transport",
            "type": "string"
          }
        },
        "$ref": "#/$defs/BasicAskAgentConfig"
      },
      {
        "$defs": {
          "AskAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "ask",
                "default": "ask",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "fallback": {
                "anyOf": [
                  {
                    "discriminator": {
                      "mapping": {
                        "ask": "#/$defs/AskAgentConfig",
                        "basic_ask": "#/$defs/BasicAskAgentConfig",
                        "brave": "#/$defs/BraveAgentConfig",
                        "context_conditional": "#/$defs/ContextConditionalAgentConfig",
                        "cypher": "#/$defs/CypherAgentConfig",
                        "google": "#/$defs/GoogleAgentConfig",
                        "mcp": "#/$defs/MCPAgentConfig",
                        "perplexity": "#/$defs/PerplexityAgentConfig",
                        "restricted": "#/$defs/PythonAgentConfig",
                        "sparql": "#/$defs/SPARQLAgentConfig",
                        "sql": "#/$defs/SQLAgentConfig",
                        "tavily": "#/$defs/TavilyAgentConfig"
                      },
                      "propertyName": "module"
                    },
                    "oneOf": [
                      {
                        "$ref": "#/$defs/SQLAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/TavilyAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/PythonAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/PerplexityAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/GoogleAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/BraveAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/CypherAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/AskAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/BasicAskAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/ContextConditionalAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/SPARQLAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/MCPAgentConfig"
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Fallback"
              },
              "pre_queries": {
                "items": {
                  "type": "string"
                },
                "title": "Pre Queries",
                "type": "array"
              },
              "filters": {
                "items": {
                  "type": "string"
                },
                "title": "Filters",
                "type": "array"
              },
              "security_groups": {
                "items": {
                  "type": "string"
                },
                "title": "Security Groups",
                "type": "array"
              },
              "rephrase_semantic_custom_prompt": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rephrase Semantic Custom Prompt"
              },
              "rephrase_lexical_custom_prompt": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rephrase Lexical Custom Prompt"
              },
              "keywords_custom_prompt": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Keywords Custom Prompt"
              },
              "visual_enable_prompt": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Visual Enable Prompt"
              },
              "date_range_enabled": {
                "default": false,
                "title": "Date Range Enabled",
                "type": "boolean"
              },
              "before": {
                "default": 2,
                "title": "Before",
                "type": "integer"
              },
              "after": {
                "default": 2,
                "title": "After",
                "type": "integer"
              },
              "top_k": {
                "default": 20,
                "title": "Top K",
                "type": "integer"
              },
              "extra_fields": {
                "default": [],
                "items": {
                  "type": "string"
                },
                "title": "Extra Fields",
                "type": "array"
              },
              "full_resource": {
                "default": false,
                "title": "Full Resource",
                "type": "boolean"
              },
              "vllm": {
                "default": true,
                "title": "Vllm",
                "type": "boolean"
              },
              "query_entities": {
                "items": {
                  "$ref": "#/$defs/KnowledgeGraphEntity"
                },
                "title": "Query Entities",
                "type": "array"
              },
              "retrieve_related": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Retrieve Related"
              },
              "sources": {
                "items": {
                  "type": "string"
                },
                "title": "Sources",
                "type": "array"
              },
              "configuration_model": {
                "default": "gemini-2.5-flash",
                "title": "Configuration Model",
                "type": "string"
              },
              "fast_answer": {
                "default": true,
                "title": "Fast Answer",
                "type": "boolean"
              },
              "ai_parameter_search": {
                "default": true,
                "title": "Ai Parameter Search",
                "type": "boolean"
              }
            },
            "title": "AskAgentConfig",
            "type": "object"
          },
          "BasicAskAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "basic_ask",
                "default": "basic_ask",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "fallback": {
                "anyOf": [
                  {
                    "discriminator": {
                      "mapping": {
                        "ask": "#/$defs/AskAgentConfig",
                        "basic_ask": "#/$defs/BasicAskAgentConfig",
                        "brave": "#/$defs/BraveAgentConfig",
                        "context_conditional": "#/$defs/ContextConditionalAgentConfig",
                        "cypher": "#/$defs/CypherAgentConfig",
                        "google": "#/$defs/GoogleAgentConfig",
                        "mcp": "#/$defs/MCPAgentConfig",
                        "perplexity": "#/$defs/PerplexityAgentConfig",
                        "restricted": "#/$defs/PythonAgentConfig",
                        "sparql": "#/$defs/SPARQLAgentConfig",
                        "sql": "#/$defs/SQLAgentConfig",
                        "tavily": "#/$defs/TavilyAgentConfig"
                      },
                      "propertyName": "module"
                    },
                    "oneOf": [
                      {
                        "$ref": "#/$defs/SQLAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/TavilyAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/PythonAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/PerplexityAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/GoogleAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/BraveAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/CypherAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/AskAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/BasicAskAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/ContextConditionalAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/SPARQLAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/MCPAgentConfig"
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Fallback"
              },
              "sources": {
                "items": {
                  "type": "string"
                },
                "title": "Sources",
                "type": "array"
              },
              "generative_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to generate answers",
                "title": "Generative model",
                "type": "string",
                "widget": "llm_select"
              }
            },
            "title": "BasicAskAgentConfig",
            "type": "object"
          },
          "BraveAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "brave",
                "default": "brave",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "domain": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Domain"
              },
              "country": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Country"
              },
              "source": {
                "default": "brave",
                "title": "Source",
                "type": "string"
              }
            },
            "title": "BraveAgentConfig",
            "type": "object"
          },
          "ContextConditionalAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "context_conditional",
                "default": "context_conditional",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "then": {
                "description": "List of agents to run in case the condition is  valid",
                "items": {
                  "discriminator": {
                    "mapping": {
                      "ask": "#/$defs/AskAgentConfig",
                      "basic_ask": "#/$defs/BasicAskAgentConfig",
                      "brave": "#/$defs/BraveAgentConfig",
                      "context_conditional": "#/$defs/ContextConditionalAgentConfig",
                      "cypher": "#/$defs/CypherAgentConfig",
                      "google": "#/$defs/GoogleAgentConfig",
                      "mcp": "#/$defs/MCPAgentConfig",
                      "perplexity": "#/$defs/PerplexityAgentConfig",
                      "restricted": "#/$defs/PythonAgentConfig",
                      "sparql": "#/$defs/SPARQLAgentConfig",
                      "sql": "#/$defs/SQLAgentConfig",
                      "tavily": "#/$defs/TavilyAgentConfig"
                    },
                    "propertyName": "module"
                  },
                  "oneOf": [
                    {
                      "$ref": "#/$defs/SQLAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/TavilyAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PythonAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PerplexityAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/GoogleAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/BraveAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/CypherAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/AskAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/BasicAskAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/ContextConditionalAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/SPARQLAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/MCPAgentConfig"
                    }
                  ]
                },
                "title": "IF agents",
                "type": "array"
              },
              "else_": {
                "description": "List of agents to run in case the condition is not valid",
                "items": {
                  "discriminator": {
                    "mapping": {
                      "ask": "#/$defs/AskAgentConfig",
                      "basic_ask": "#/$defs/BasicAskAgentConfig",
                      "brave": "#/$defs/BraveAgentConfig",
                      "context_conditional": "#/$defs/ContextConditionalAgentConfig",
                      "cypher": "#/$defs/CypherAgentConfig",
                      "google": "#/$defs/GoogleAgentConfig",
                      "mcp": "#/$defs/MCPAgentConfig",
                      "perplexity": "#/$defs/PerplexityAgentConfig",
                      "restricted": "#/$defs/PythonAgentConfig",
                      "sparql": "#/$defs/SPARQLAgentConfig",
                      "sql": "#/$defs/SQLAgentConfig",
                      "tavily": "#/$defs/TavilyAgentConfig"
                    },
                    "propertyName": "module"
                  },
                  "oneOf": [
                    {
                      "$ref": "#/$defs/SQLAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/TavilyAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PythonAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PerplexityAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/GoogleAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/BraveAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/CypherAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/AskAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/BasicAskAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/ContextConditionalAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/SPARQLAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/MCPAgentConfig"
                    }
                  ]
                },
                "title": "Else agents",
                "type": "array"
              },
              "prompt": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Prompt"
              },
              "has_keywords": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Has Keywords"
              },
              "similarity": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Similarity"
              },
              "on": {
                "$ref": "#/$defs/Source",
                "default": "QUESTION"
              },
              "model": {
                "default": "chatgpt-o3-mini",
                "title": "Model",
                "type": "string"
              }
            },
            "title": "ContextConditionalAgentConfig",
            "type": "object"
          },
          "CypherAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "cypher",
                "default": "cypher",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "source": {
                "title": "Source",
                "type": "string"
              },
              "exclude_types": {
                "items": {
                  "type": "string"
                },
                "title": "Exclude Types",
                "type": "array"
              },
              "include_types": {
                "items": {
                  "type": "string"
                },
                "title": "Include Types",
                "type": "array"
              },
              "allow_dangerous_requests": {
                "default": true,
                "title": "Allow Dangerous Requests",
                "type": "boolean"
              },
              "top_k": {
                "default": 10,
                "title": "Top K",
                "type": "integer"
              },
              "model": {
                "default": "gemini-2.5-flash-lite",
                "title": "Model",
                "type": "string"
              }
            },
            "required": ["source"],
            "title": "CypherAgentConfig",
            "type": "object"
          },
          "GoogleAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "google",
                "default": "google",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "gen_model_id": {
                "default": "gemini-2.5-flash",
                "title": "Gen Model Id",
                "type": "string"
              },
              "source": {
                "default": "google",
                "title": "Source",
                "type": "string"
              }
            },
            "title": "GoogleAgentConfig",
            "type": "object"
          },
          "KnowledgeGraphEntity": {
            "properties": {
              "name": {
                "title": "Name",
                "type": "string"
              },
              "type": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/RelationNodeType"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "subtype": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Subtype"
              }
            },
            "required": ["name"],
            "title": "KnowledgeGraphEntity",
            "type": "object"
          },
          "MCPAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "mcp",
                "default": "mcp",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "transport": {
                "$ref": "#/$defs/Transport",
                "default": "SSE",
                "title": "Proper transport mechanism"
              },
              "source": {
                "title": "Source",
                "type": "string"
              },
              "tool_choice_model": {
                "default": "chatgpt-4.1",
                "title": "Tool Choice Model",
                "type": "string"
              },
              "fallback": {
                "anyOf": [
                  {
                    "discriminator": {
                      "mapping": {
                        "ask": "#/$defs/AskAgentConfig",
                        "basic_ask": "#/$defs/BasicAskAgentConfig",
                        "brave": "#/$defs/BraveAgentConfig",
                        "context_conditional": "#/$defs/ContextConditionalAgentConfig",
                        "cypher": "#/$defs/CypherAgentConfig",
                        "google": "#/$defs/GoogleAgentConfig",
                        "mcp": "#/$defs/MCPAgentConfig",
                        "perplexity": "#/$defs/PerplexityAgentConfig",
                        "restricted": "#/$defs/PythonAgentConfig",
                        "sparql": "#/$defs/SPARQLAgentConfig",
                        "sql": "#/$defs/SQLAgentConfig",
                        "tavily": "#/$defs/TavilyAgentConfig"
                      },
                      "propertyName": "module"
                    },
                    "oneOf": [
                      {
                        "$ref": "#/$defs/SQLAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/TavilyAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/PythonAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/PerplexityAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/GoogleAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/BraveAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/CypherAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/AskAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/BasicAskAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/ContextConditionalAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/SPARQLAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/MCPAgentConfig"
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Fallback"
              },
              "valid_headers": {
                "items": {
                  "type": "string"
                },
                "title": "Valid headers to forward to the agent",
                "type": "array"
              },
              "read_timeout_seconds": {
                "default": 400,
                "title": "Read timeout in seconds",
                "type": "integer"
              },
              "roots": {
                "additionalProperties": {
                  "type": "string"
                },
                "title": "Available roots format name: url}",
                "type": "object"
              },
              "interaction": {
                "default": false,
                "title": "Enable interaction with the user",
                "type": "boolean"
              },
              "feedback_timeout": {
                "default": 10000,
                "title": "Feedback timeout in milliseconds",
                "type": "integer"
              },
              "progress_feedback": {
                "default": true,
                "title": "Enable progress feedback",
                "type": "boolean"
              },
              "work_chain": {
                "default": true,
                "title": "Enable loop on tool",
                "type": "boolean"
              },
              "max_turns": {
                "default": 5,
                "title": "Maximum number of tool calls before stopping",
                "type": "integer"
              },
              "sampling_model": {
                "default": "gemini-2.5-flash",
                "title": "Sampling Model",
                "type": "string"
              }
            },
            "required": ["source"],
            "title": "MCPAgentConfig",
            "type": "object"
          },
          "PerplexityAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "perplexity",
                "default": "perplexity",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "domain": {
                "description": "Domains to restrict the Perplexity search to.",
                "items": {
                  "type": "string"
                },
                "title": "Domain Filter",
                "type": "array"
              },
              "search_context_size": {
                "default": "low",
                "description": "Determines how much search context Perplexity retrieves for the model. Options are: `low` (minimizes context for cost savings but less comprehensive answers), `medium` (balanced approach suitable for most queries), and `high` (maximizes context for comprehensive answers but at higher cost).",
                "enum": ["low", "medium", "high"],
                "title": "Search Context Size",
                "type": "string"
              },
              "related_questions": {
                "default": false,
                "description": "Determines if Perplexity should return related questions to the original. They will be stored in the Agentic Memory as future questions",
                "title": "Generate Related Questions",
                "type": "boolean"
              },
              "images": {
                "default": false,
                "description": "Determines whether Perplexity search results should include images.",
                "title": "Return Images",
                "type": "boolean"
              },
              "source": {
                "default": "perplexity",
                "title": "Source",
                "type": "string"
              }
            },
            "title": "PerplexityAgentConfig",
            "type": "object"
          },
          "PythonAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "restricted",
                "default": "restricted",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "code": {
                "title": "Code",
                "type": "string"
              }
            },
            "required": ["code"],
            "title": "PythonAgentConfig",
            "type": "object"
          },
          "RelationNodeType": {
            "enum": ["entity", "label", "resource", "user"],
            "title": "RelationNodeType",
            "type": "string"
          },
          "SPARQLAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "sparql",
                "default": "sparql",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              }
            },
            "title": "SPARQLAgentConfig",
            "type": "object"
          },
          "SQLAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "sql",
                "default": "sql",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-o3-mini",
                "title": "Summarize Model",
                "type": "string"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "source": {
                "title": "Source",
                "type": "string"
              },
              "description": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Description"
              },
              "sqlschema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Sqlschema"
              },
              "retries": {
                "default": 3,
                "title": "Retries",
                "type": "integer"
              },
              "ignore_tables": {
                "default": [],
                "items": {
                  "type": "string"
                },
                "title": "Ignore Tables",
                "type": "array"
              },
              "include_tables": {
                "default": [],
                "items": {
                  "type": "string"
                },
                "title": "Include Tables",
                "type": "array"
              },
              "sample_rows_in_table_info": {
                "default": 3,
                "title": "Sample Rows In Table Info",
                "type": "integer"
              },
              "indexes_in_table_info": {
                "default": false,
                "title": "Indexes In Table Info",
                "type": "boolean"
              },
              "custom_table_info": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Custom Table Info"
              },
              "view_support": {
                "default": false,
                "title": "View Support",
                "type": "boolean"
              },
              "max_string_length": {
                "default": 300,
                "title": "Max String Length",
                "type": "integer"
              },
              "lazy_table_reflection": {
                "default": false,
                "title": "Lazy Table Reflection",
                "type": "boolean"
              },
              "conversion_model": {
                "default": "chatgpt4o",
                "title": "Conversion Model",
                "type": "string"
              }
            },
            "required": ["source"],
            "title": "SQLAgentConfig",
            "type": "object"
          },
          "Source": {
            "enum": ["QUESTION", "ANSWER", "CONTEXT"],
            "title": "Source",
            "type": "string"
          },
          "TavilyAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "tavily",
                "default": "tavily",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "domains": {
                "items": {
                  "type": "string"
                },
                "title": "Domains",
                "type": "array"
              },
              "source": {
                "default": "tavily",
                "title": "Source",
                "type": "string"
              }
            },
            "title": "TavilyAgentConfig",
            "type": "object"
          },
          "Transport": {
            "enum": ["SSE", "STDIO", "HTTP"],
            "title": "Transport",
            "type": "string"
          }
        },
        "$ref": "#/$defs/ContextConditionalAgentConfig"
      },
      {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "module": {
            "const": "sparql",
            "default": "sparql",
            "title": "Module",
            "type": "string"
          },
          "title": {
            "default": "agent",
            "title": "Title",
            "type": "string"
          },
          "rules": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Rules"
          },
          "summarize_model": {
            "default": "chatgpt-azure-4o-mini",
            "description": "Model used to summarize the answer",
            "title": "Summary model",
            "type": "string",
            "widget": "llm_select"
          },
          "rephrase_model": {
            "default": "chatgpt-azure-4o-mini",
            "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
            "title": "Rephrase model",
            "type": "string",
            "widget": "llm_select"
          },
          "max_retries": {
            "default": 1,
            "title": "Max Retries",
            "type": "integer"
          }
        },
        "title": "SPARQLAgentConfig",
        "type": "object"
      },
      {
        "$defs": {
          "AskAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "ask",
                "default": "ask",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "fallback": {
                "anyOf": [
                  {
                    "discriminator": {
                      "mapping": {
                        "ask": "#/$defs/AskAgentConfig",
                        "basic_ask": "#/$defs/BasicAskAgentConfig",
                        "brave": "#/$defs/BraveAgentConfig",
                        "context_conditional": "#/$defs/ContextConditionalAgentConfig",
                        "cypher": "#/$defs/CypherAgentConfig",
                        "google": "#/$defs/GoogleAgentConfig",
                        "mcp": "#/$defs/MCPAgentConfig",
                        "perplexity": "#/$defs/PerplexityAgentConfig",
                        "restricted": "#/$defs/PythonAgentConfig",
                        "sparql": "#/$defs/SPARQLAgentConfig",
                        "sql": "#/$defs/SQLAgentConfig",
                        "tavily": "#/$defs/TavilyAgentConfig"
                      },
                      "propertyName": "module"
                    },
                    "oneOf": [
                      {
                        "$ref": "#/$defs/SQLAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/TavilyAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/PythonAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/PerplexityAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/GoogleAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/BraveAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/CypherAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/AskAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/BasicAskAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/ContextConditionalAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/SPARQLAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/MCPAgentConfig"
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Fallback"
              },
              "pre_queries": {
                "items": {
                  "type": "string"
                },
                "title": "Pre Queries",
                "type": "array"
              },
              "filters": {
                "items": {
                  "type": "string"
                },
                "title": "Filters",
                "type": "array"
              },
              "security_groups": {
                "items": {
                  "type": "string"
                },
                "title": "Security Groups",
                "type": "array"
              },
              "rephrase_semantic_custom_prompt": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rephrase Semantic Custom Prompt"
              },
              "rephrase_lexical_custom_prompt": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rephrase Lexical Custom Prompt"
              },
              "keywords_custom_prompt": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Keywords Custom Prompt"
              },
              "visual_enable_prompt": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Visual Enable Prompt"
              },
              "date_range_enabled": {
                "default": false,
                "title": "Date Range Enabled",
                "type": "boolean"
              },
              "before": {
                "default": 2,
                "title": "Before",
                "type": "integer"
              },
              "after": {
                "default": 2,
                "title": "After",
                "type": "integer"
              },
              "top_k": {
                "default": 20,
                "title": "Top K",
                "type": "integer"
              },
              "extra_fields": {
                "default": [],
                "items": {
                  "type": "string"
                },
                "title": "Extra Fields",
                "type": "array"
              },
              "full_resource": {
                "default": false,
                "title": "Full Resource",
                "type": "boolean"
              },
              "vllm": {
                "default": true,
                "title": "Vllm",
                "type": "boolean"
              },
              "query_entities": {
                "items": {
                  "$ref": "#/$defs/KnowledgeGraphEntity"
                },
                "title": "Query Entities",
                "type": "array"
              },
              "retrieve_related": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Retrieve Related"
              },
              "sources": {
                "items": {
                  "type": "string"
                },
                "title": "Sources",
                "type": "array"
              },
              "configuration_model": {
                "default": "gemini-2.5-flash",
                "title": "Configuration Model",
                "type": "string"
              },
              "fast_answer": {
                "default": true,
                "title": "Fast Answer",
                "type": "boolean"
              },
              "ai_parameter_search": {
                "default": true,
                "title": "Ai Parameter Search",
                "type": "boolean"
              }
            },
            "title": "AskAgentConfig",
            "type": "object"
          },
          "BasicAskAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "basic_ask",
                "default": "basic_ask",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "fallback": {
                "anyOf": [
                  {
                    "discriminator": {
                      "mapping": {
                        "ask": "#/$defs/AskAgentConfig",
                        "basic_ask": "#/$defs/BasicAskAgentConfig",
                        "brave": "#/$defs/BraveAgentConfig",
                        "context_conditional": "#/$defs/ContextConditionalAgentConfig",
                        "cypher": "#/$defs/CypherAgentConfig",
                        "google": "#/$defs/GoogleAgentConfig",
                        "mcp": "#/$defs/MCPAgentConfig",
                        "perplexity": "#/$defs/PerplexityAgentConfig",
                        "restricted": "#/$defs/PythonAgentConfig",
                        "sparql": "#/$defs/SPARQLAgentConfig",
                        "sql": "#/$defs/SQLAgentConfig",
                        "tavily": "#/$defs/TavilyAgentConfig"
                      },
                      "propertyName": "module"
                    },
                    "oneOf": [
                      {
                        "$ref": "#/$defs/SQLAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/TavilyAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/PythonAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/PerplexityAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/GoogleAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/BraveAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/CypherAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/AskAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/BasicAskAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/ContextConditionalAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/SPARQLAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/MCPAgentConfig"
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Fallback"
              },
              "sources": {
                "items": {
                  "type": "string"
                },
                "title": "Sources",
                "type": "array"
              },
              "generative_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to generate answers",
                "title": "Generative model",
                "type": "string",
                "widget": "llm_select"
              }
            },
            "title": "BasicAskAgentConfig",
            "type": "object"
          },
          "BraveAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "brave",
                "default": "brave",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "domain": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Domain"
              },
              "country": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Country"
              },
              "source": {
                "default": "brave",
                "title": "Source",
                "type": "string"
              }
            },
            "title": "BraveAgentConfig",
            "type": "object"
          },
          "ContextConditionalAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "context_conditional",
                "default": "context_conditional",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "then": {
                "description": "List of agents to run in case the condition is  valid",
                "items": {
                  "discriminator": {
                    "mapping": {
                      "ask": "#/$defs/AskAgentConfig",
                      "basic_ask": "#/$defs/BasicAskAgentConfig",
                      "brave": "#/$defs/BraveAgentConfig",
                      "context_conditional": "#/$defs/ContextConditionalAgentConfig",
                      "cypher": "#/$defs/CypherAgentConfig",
                      "google": "#/$defs/GoogleAgentConfig",
                      "mcp": "#/$defs/MCPAgentConfig",
                      "perplexity": "#/$defs/PerplexityAgentConfig",
                      "restricted": "#/$defs/PythonAgentConfig",
                      "sparql": "#/$defs/SPARQLAgentConfig",
                      "sql": "#/$defs/SQLAgentConfig",
                      "tavily": "#/$defs/TavilyAgentConfig"
                    },
                    "propertyName": "module"
                  },
                  "oneOf": [
                    {
                      "$ref": "#/$defs/SQLAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/TavilyAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PythonAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PerplexityAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/GoogleAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/BraveAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/CypherAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/AskAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/BasicAskAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/ContextConditionalAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/SPARQLAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/MCPAgentConfig"
                    }
                  ]
                },
                "title": "IF agents",
                "type": "array"
              },
              "else_": {
                "description": "List of agents to run in case the condition is not valid",
                "items": {
                  "discriminator": {
                    "mapping": {
                      "ask": "#/$defs/AskAgentConfig",
                      "basic_ask": "#/$defs/BasicAskAgentConfig",
                      "brave": "#/$defs/BraveAgentConfig",
                      "context_conditional": "#/$defs/ContextConditionalAgentConfig",
                      "cypher": "#/$defs/CypherAgentConfig",
                      "google": "#/$defs/GoogleAgentConfig",
                      "mcp": "#/$defs/MCPAgentConfig",
                      "perplexity": "#/$defs/PerplexityAgentConfig",
                      "restricted": "#/$defs/PythonAgentConfig",
                      "sparql": "#/$defs/SPARQLAgentConfig",
                      "sql": "#/$defs/SQLAgentConfig",
                      "tavily": "#/$defs/TavilyAgentConfig"
                    },
                    "propertyName": "module"
                  },
                  "oneOf": [
                    {
                      "$ref": "#/$defs/SQLAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/TavilyAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PythonAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PerplexityAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/GoogleAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/BraveAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/CypherAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/AskAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/BasicAskAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/ContextConditionalAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/SPARQLAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/MCPAgentConfig"
                    }
                  ]
                },
                "title": "Else agents",
                "type": "array"
              },
              "prompt": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Prompt"
              },
              "has_keywords": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Has Keywords"
              },
              "similarity": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Similarity"
              },
              "on": {
                "$ref": "#/$defs/Source",
                "default": "QUESTION"
              },
              "model": {
                "default": "chatgpt-o3-mini",
                "title": "Model",
                "type": "string"
              }
            },
            "title": "ContextConditionalAgentConfig",
            "type": "object"
          },
          "CypherAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "cypher",
                "default": "cypher",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "source": {
                "title": "Source",
                "type": "string"
              },
              "exclude_types": {
                "items": {
                  "type": "string"
                },
                "title": "Exclude Types",
                "type": "array"
              },
              "include_types": {
                "items": {
                  "type": "string"
                },
                "title": "Include Types",
                "type": "array"
              },
              "allow_dangerous_requests": {
                "default": true,
                "title": "Allow Dangerous Requests",
                "type": "boolean"
              },
              "top_k": {
                "default": 10,
                "title": "Top K",
                "type": "integer"
              },
              "model": {
                "default": "gemini-2.5-flash-lite",
                "title": "Model",
                "type": "string"
              }
            },
            "required": ["source"],
            "title": "CypherAgentConfig",
            "type": "object"
          },
          "GoogleAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "google",
                "default": "google",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "gen_model_id": {
                "default": "gemini-2.5-flash",
                "title": "Gen Model Id",
                "type": "string"
              },
              "source": {
                "default": "google",
                "title": "Source",
                "type": "string"
              }
            },
            "title": "GoogleAgentConfig",
            "type": "object"
          },
          "KnowledgeGraphEntity": {
            "properties": {
              "name": {
                "title": "Name",
                "type": "string"
              },
              "type": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/RelationNodeType"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "subtype": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Subtype"
              }
            },
            "required": ["name"],
            "title": "KnowledgeGraphEntity",
            "type": "object"
          },
          "MCPAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "mcp",
                "default": "mcp",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "transport": {
                "$ref": "#/$defs/Transport",
                "default": "SSE",
                "title": "Proper transport mechanism"
              },
              "source": {
                "title": "Source",
                "type": "string"
              },
              "tool_choice_model": {
                "default": "chatgpt-4.1",
                "title": "Tool Choice Model",
                "type": "string"
              },
              "fallback": {
                "anyOf": [
                  {
                    "discriminator": {
                      "mapping": {
                        "ask": "#/$defs/AskAgentConfig",
                        "basic_ask": "#/$defs/BasicAskAgentConfig",
                        "brave": "#/$defs/BraveAgentConfig",
                        "context_conditional": "#/$defs/ContextConditionalAgentConfig",
                        "cypher": "#/$defs/CypherAgentConfig",
                        "google": "#/$defs/GoogleAgentConfig",
                        "mcp": "#/$defs/MCPAgentConfig",
                        "perplexity": "#/$defs/PerplexityAgentConfig",
                        "restricted": "#/$defs/PythonAgentConfig",
                        "sparql": "#/$defs/SPARQLAgentConfig",
                        "sql": "#/$defs/SQLAgentConfig",
                        "tavily": "#/$defs/TavilyAgentConfig"
                      },
                      "propertyName": "module"
                    },
                    "oneOf": [
                      {
                        "$ref": "#/$defs/SQLAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/TavilyAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/PythonAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/PerplexityAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/GoogleAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/BraveAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/CypherAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/AskAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/BasicAskAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/ContextConditionalAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/SPARQLAgentConfig"
                      },
                      {
                        "$ref": "#/$defs/MCPAgentConfig"
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Fallback"
              },
              "valid_headers": {
                "items": {
                  "type": "string"
                },
                "title": "Valid headers to forward to the agent",
                "type": "array"
              },
              "read_timeout_seconds": {
                "default": 400,
                "title": "Read timeout in seconds",
                "type": "integer"
              },
              "roots": {
                "additionalProperties": {
                  "type": "string"
                },
                "title": "Available roots format name: url}",
                "type": "object"
              },
              "interaction": {
                "default": false,
                "title": "Enable interaction with the user",
                "type": "boolean"
              },
              "feedback_timeout": {
                "default": 10000,
                "title": "Feedback timeout in milliseconds",
                "type": "integer"
              },
              "progress_feedback": {
                "default": true,
                "title": "Enable progress feedback",
                "type": "boolean"
              },
              "work_chain": {
                "default": true,
                "title": "Enable loop on tool",
                "type": "boolean"
              },
              "max_turns": {
                "default": 5,
                "title": "Maximum number of tool calls before stopping",
                "type": "integer"
              },
              "sampling_model": {
                "default": "gemini-2.5-flash",
                "title": "Sampling Model",
                "type": "string"
              }
            },
            "required": ["source"],
            "title": "MCPAgentConfig",
            "type": "object"
          },
          "PerplexityAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "perplexity",
                "default": "perplexity",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "domain": {
                "description": "Domains to restrict the Perplexity search to.",
                "items": {
                  "type": "string"
                },
                "title": "Domain Filter",
                "type": "array"
              },
              "search_context_size": {
                "default": "low",
                "description": "Determines how much search context Perplexity retrieves for the model. Options are: `low` (minimizes context for cost savings but less comprehensive answers), `medium` (balanced approach suitable for most queries), and `high` (maximizes context for comprehensive answers but at higher cost).",
                "enum": ["low", "medium", "high"],
                "title": "Search Context Size",
                "type": "string"
              },
              "related_questions": {
                "default": false,
                "description": "Determines if Perplexity should return related questions to the original. They will be stored in the Agentic Memory as future questions",
                "title": "Generate Related Questions",
                "type": "boolean"
              },
              "images": {
                "default": false,
                "description": "Determines whether Perplexity search results should include images.",
                "title": "Return Images",
                "type": "boolean"
              },
              "source": {
                "default": "perplexity",
                "title": "Source",
                "type": "string"
              }
            },
            "title": "PerplexityAgentConfig",
            "type": "object"
          },
          "PythonAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "restricted",
                "default": "restricted",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "code": {
                "title": "Code",
                "type": "string"
              }
            },
            "required": ["code"],
            "title": "PythonAgentConfig",
            "type": "object"
          },
          "RelationNodeType": {
            "enum": ["entity", "label", "resource", "user"],
            "title": "RelationNodeType",
            "type": "string"
          },
          "SPARQLAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "sparql",
                "default": "sparql",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              }
            },
            "title": "SPARQLAgentConfig",
            "type": "object"
          },
          "SQLAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "sql",
                "default": "sql",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-o3-mini",
                "title": "Summarize Model",
                "type": "string"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "source": {
                "title": "Source",
                "type": "string"
              },
              "description": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Description"
              },
              "sqlschema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Sqlschema"
              },
              "retries": {
                "default": 3,
                "title": "Retries",
                "type": "integer"
              },
              "ignore_tables": {
                "default": [],
                "items": {
                  "type": "string"
                },
                "title": "Ignore Tables",
                "type": "array"
              },
              "include_tables": {
                "default": [],
                "items": {
                  "type": "string"
                },
                "title": "Include Tables",
                "type": "array"
              },
              "sample_rows_in_table_info": {
                "default": 3,
                "title": "Sample Rows In Table Info",
                "type": "integer"
              },
              "indexes_in_table_info": {
                "default": false,
                "title": "Indexes In Table Info",
                "type": "boolean"
              },
              "custom_table_info": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Custom Table Info"
              },
              "view_support": {
                "default": false,
                "title": "View Support",
                "type": "boolean"
              },
              "max_string_length": {
                "default": 300,
                "title": "Max String Length",
                "type": "integer"
              },
              "lazy_table_reflection": {
                "default": false,
                "title": "Lazy Table Reflection",
                "type": "boolean"
              },
              "conversion_model": {
                "default": "chatgpt4o",
                "title": "Conversion Model",
                "type": "string"
              }
            },
            "required": ["source"],
            "title": "SQLAgentConfig",
            "type": "object"
          },
          "Source": {
            "enum": ["QUESTION", "ANSWER", "CONTEXT"],
            "title": "Source",
            "type": "string"
          },
          "TavilyAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "tavily",
                "default": "tavily",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "domains": {
                "items": {
                  "type": "string"
                },
                "title": "Domains",
                "type": "array"
              },
              "source": {
                "default": "tavily",
                "title": "Source",
                "type": "string"
              }
            },
            "title": "TavilyAgentConfig",
            "type": "object"
          },
          "Transport": {
            "enum": ["SSE", "STDIO", "HTTP"],
            "title": "Transport",
            "type": "string"
          }
        },
        "$ref": "#/$defs/MCPAgentConfig"
      }
    ],
    "preprocess": [
      {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "module": {
            "const": "historical",
            "default": "historical",
            "title": "Module",
            "type": "string"
          },
          "title": {
            "default": "agent",
            "title": "Title",
            "type": "string"
          },
          "rules": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Rules"
          },
          "summarize_model": {
            "default": "chatgpt-azure-4o-mini",
            "description": "Model used to summarize the answer",
            "title": "Summary model",
            "type": "string",
            "widget": "llm_select"
          },
          "rephrase_model": {
            "default": "chatgpt-azure-4o-mini",
            "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
            "title": "Rephrase model",
            "type": "string",
            "widget": "llm_select"
          },
          "max_retries": {
            "default": 1,
            "title": "Max Retries",
            "type": "integer"
          },
          "all": {
            "title": "All",
            "type": "boolean"
          }
        },
        "required": ["all"],
        "title": "HistoricalAgentConfig",
        "type": "object"
      },
      {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "module": {
            "const": "rephrase",
            "default": "rephrase",
            "title": "Module",
            "type": "string"
          },
          "title": {
            "default": "agent",
            "title": "Title",
            "type": "string"
          },
          "rules": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Rules"
          },
          "summarize_model": {
            "default": "chatgpt-azure-4o-mini",
            "description": "Model used to summarize the answer",
            "title": "Summary model",
            "type": "string",
            "widget": "llm_select"
          },
          "rephrase_model": {
            "default": "chatgpt-azure-4o-mini",
            "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
            "title": "Rephrase model",
            "type": "string",
            "widget": "llm_select"
          },
          "max_retries": {
            "default": 1,
            "title": "Max Retries",
            "type": "integer"
          },
          "kb": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Kb"
          },
          "rids": {
            "items": {
              "type": "string"
            },
            "title": "Rids",
            "type": "array"
          },
          "labels": {
            "items": {
              "type": "string"
            },
            "title": "Labels",
            "type": "array"
          },
          "synonyms": {
            "default": true,
            "title": "Synonyms",
            "type": "boolean"
          },
          "extend": {
            "default": true,
            "title": "Extend",
            "type": "boolean"
          },
          "session_info": {
            "default": false,
            "title": "Session Info",
            "type": "boolean"
          },
          "history": {
            "default": false,
            "title": "History",
            "type": "boolean"
          },
          "model": {
            "default": "gemini-2.5-flash-lite",
            "title": "Model",
            "type": "string"
          },
          "split_question": {
            "default": false,
            "title": "Split Question",
            "type": "boolean"
          }
        },
        "title": "RephraseAgentConfig",
        "type": "object"
      },
      {
        "$defs": {
          "AdviceConfig": {
            "properties": {
              "investment_advice": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Investment Advice"
              },
              "legal_advice": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Legal Advice"
              },
              "medical_advice": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Medical Advice"
              },
              "tax_advice": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Tax Advice"
              }
            },
            "title": "AdviceConfig",
            "type": "object"
          },
          "CustomConfig": {
            "properties": {
              "black_list": {
                "items": {
                  "type": "string"
                },
                "title": "Black List",
                "type": "array"
              },
              "patterns": {
                "items": {
                  "type": "string"
                },
                "title": "Patterns",
                "type": "array"
              },
              "topics": {
                "items": {
                  "type": "string"
                },
                "title": "Topics",
                "type": "array"
              }
            },
            "title": "CustomConfig",
            "type": "object"
          },
          "DetectionConfig": {
            "properties": {
              "compliance": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/AdviceConfig"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "custom": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/CustomConfig"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "safety": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Safety"
              },
              "security": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/SecurityConfig"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "sensitive_information": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Sensitive Information"
              }
            },
            "title": "DetectionConfig",
            "type": "object"
          },
          "HistoricalAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "historical",
                "default": "historical",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "all": {
                "title": "All",
                "type": "boolean"
              }
            },
            "required": ["all"],
            "title": "HistoricalAgentConfig",
            "type": "object"
          },
          "Metadata": {
            "properties": {
              "user_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "User Id"
              },
              "environment": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Environment"
              }
            },
            "title": "Metadata",
            "type": "object"
          },
          "PreprocessAliniaAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "preprocess_alinia",
                "default": "preprocess_alinia",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "preconfig": {
                "$ref": "#/$defs/PreprocessGuardrail",
                "default": "CUSTOM"
              },
              "detection_config": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/DetectionConfig"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "metadata": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Metadata"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              }
            },
            "title": "PreprocessAliniaAgentConfig",
            "type": "object"
          },
          "PreprocessConditionalAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "pre_conditional",
                "default": "pre_conditional",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "then": {
                "description": "List of agents to run in case the condition is  valid",
                "items": {
                  "discriminator": {
                    "mapping": {
                      "historical": "#/$defs/HistoricalAgentConfig",
                      "pre_conditional": "#/$defs/PreprocessConditionalAgentConfig",
                      "preprocess_alinia": "#/$defs/PreprocessAliniaAgentConfig",
                      "rephrase": "#/$defs/RephraseAgentConfig"
                    },
                    "propertyName": "module"
                  },
                  "oneOf": [
                    {
                      "$ref": "#/$defs/HistoricalAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/RephraseAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PreprocessConditionalAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PreprocessAliniaAgentConfig"
                    }
                  ]
                },
                "title": "IF agents",
                "type": "array"
              },
              "else_": {
                "description": "List of agents to run in case the condition is not valid",
                "items": {
                  "discriminator": {
                    "mapping": {
                      "historical": "#/$defs/HistoricalAgentConfig",
                      "pre_conditional": "#/$defs/PreprocessConditionalAgentConfig",
                      "preprocess_alinia": "#/$defs/PreprocessAliniaAgentConfig",
                      "rephrase": "#/$defs/RephraseAgentConfig"
                    },
                    "propertyName": "module"
                  },
                  "oneOf": [
                    {
                      "$ref": "#/$defs/HistoricalAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/RephraseAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PreprocessConditionalAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PreprocessAliniaAgentConfig"
                    }
                  ]
                },
                "title": "Else agents",
                "type": "array"
              },
              "prompt": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Prompt"
              },
              "has_keywords": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Has Keywords"
              },
              "similarity": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Similarity"
              },
              "on": {
                "$ref": "#/$defs/Source",
                "default": "QUESTION"
              },
              "model": {
                "default": "chatgpt-o3-mini",
                "title": "Model",
                "type": "string"
              }
            },
            "title": "PreprocessConditionalAgentConfig",
            "type": "object"
          },
          "PreprocessGuardrail": {
            "enum": ["INAPPROPRIATE", "CUSTOM"],
            "title": "PreprocessGuardrail",
            "type": "string"
          },
          "RephraseAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "rephrase",
                "default": "rephrase",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "kb": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Kb"
              },
              "rids": {
                "items": {
                  "type": "string"
                },
                "title": "Rids",
                "type": "array"
              },
              "labels": {
                "items": {
                  "type": "string"
                },
                "title": "Labels",
                "type": "array"
              },
              "synonyms": {
                "default": true,
                "title": "Synonyms",
                "type": "boolean"
              },
              "extend": {
                "default": true,
                "title": "Extend",
                "type": "boolean"
              },
              "session_info": {
                "default": false,
                "title": "Session Info",
                "type": "boolean"
              },
              "history": {
                "default": false,
                "title": "History",
                "type": "boolean"
              },
              "model": {
                "default": "gemini-2.5-flash-lite",
                "title": "Model",
                "type": "string"
              },
              "split_question": {
                "default": false,
                "title": "Split Question",
                "type": "boolean"
              }
            },
            "title": "RephraseAgentConfig",
            "type": "object"
          },
          "SecurityConfig": {
            "properties": {
              "adversarial": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Adversarial"
              },
              "gibberish": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Gibberish"
              },
              "under_trained_tokens": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Under Trained Tokens"
              }
            },
            "title": "SecurityConfig",
            "type": "object"
          },
          "Source": {
            "enum": ["QUESTION", "ANSWER", "CONTEXT"],
            "title": "Source",
            "type": "string"
          }
        },
        "$ref": "#/$defs/PreprocessConditionalAgentConfig"
      },
      {
        "$defs": {
          "AdviceConfig": {
            "properties": {
              "investment_advice": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Investment Advice"
              },
              "legal_advice": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Legal Advice"
              },
              "medical_advice": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Medical Advice"
              },
              "tax_advice": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Tax Advice"
              }
            },
            "title": "AdviceConfig",
            "type": "object"
          },
          "CustomConfig": {
            "properties": {
              "black_list": {
                "items": {
                  "type": "string"
                },
                "title": "Black List",
                "type": "array"
              },
              "patterns": {
                "items": {
                  "type": "string"
                },
                "title": "Patterns",
                "type": "array"
              },
              "topics": {
                "items": {
                  "type": "string"
                },
                "title": "Topics",
                "type": "array"
              }
            },
            "title": "CustomConfig",
            "type": "object"
          },
          "DetectionConfig": {
            "properties": {
              "compliance": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/AdviceConfig"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "custom": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/CustomConfig"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "safety": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Safety"
              },
              "security": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/SecurityConfig"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "sensitive_information": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Sensitive Information"
              }
            },
            "title": "DetectionConfig",
            "type": "object"
          },
          "Metadata": {
            "properties": {
              "user_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "User Id"
              },
              "environment": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Environment"
              }
            },
            "title": "Metadata",
            "type": "object"
          },
          "PreprocessGuardrail": {
            "enum": ["INAPPROPRIATE", "CUSTOM"],
            "title": "PreprocessGuardrail",
            "type": "string"
          },
          "SecurityConfig": {
            "properties": {
              "adversarial": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Adversarial"
              },
              "gibberish": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Gibberish"
              },
              "under_trained_tokens": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Under Trained Tokens"
              }
            },
            "title": "SecurityConfig",
            "type": "object"
          }
        },
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "module": {
            "const": "preprocess_alinia",
            "default": "preprocess_alinia",
            "title": "Module",
            "type": "string"
          },
          "title": {
            "default": "agent",
            "title": "Title",
            "type": "string"
          },
          "rules": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Rules"
          },
          "summarize_model": {
            "default": "chatgpt-azure-4o-mini",
            "description": "Model used to summarize the answer",
            "title": "Summary model",
            "type": "string",
            "widget": "llm_select"
          },
          "rephrase_model": {
            "default": "chatgpt-azure-4o-mini",
            "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
            "title": "Rephrase model",
            "type": "string",
            "widget": "llm_select"
          },
          "max_retries": {
            "default": 1,
            "title": "Max Retries",
            "type": "integer"
          },
          "preconfig": {
            "$ref": "#/$defs/PreprocessGuardrail",
            "default": "CUSTOM"
          },
          "detection_config": {
            "anyOf": [
              {
                "$ref": "#/$defs/DetectionConfig"
              },
              {
                "type": "null"
              }
            ],
            "default": null
          },
          "metadata": {
            "anyOf": [
              {
                "$ref": "#/$defs/Metadata"
              },
              {
                "type": "null"
              }
            ],
            "default": null
          }
        },
        "title": "PreprocessAliniaAgentConfig",
        "type": "object"
      }
    ],
    "generation": [
      {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "module": {
            "const": "summarize",
            "default": "summarize",
            "title": "Module",
            "type": "string"
          },
          "title": {
            "default": "agent",
            "title": "Title",
            "type": "string"
          },
          "rules": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Rules"
          },
          "summarize_model": {
            "default": "chatgpt-azure-4o-mini",
            "description": "Model used to summarize the answer",
            "title": "Summary model",
            "type": "string",
            "widget": "llm_select"
          },
          "rephrase_model": {
            "default": "chatgpt-azure-4o-mini",
            "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
            "title": "Rephrase model",
            "type": "string",
            "widget": "llm_select"
          },
          "max_retries": {
            "default": 1,
            "title": "Max Retries",
            "type": "integer"
          },
          "prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Prompt"
          },
          "model": {
            "default": "chatgpt-azure-4o-mini",
            "title": "Model",
            "type": "string"
          },
          "images": {
            "default": false,
            "title": "Images",
            "type": "boolean"
          },
          "conversational": {
            "default": false,
            "title": "Conversational",
            "type": "boolean"
          }
        },
        "title": "SummarizeAgentConfig",
        "type": "object"
      },
      {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "module": {
            "const": "generate",
            "default": "generate",
            "title": "Module",
            "type": "string"
          },
          "title": {
            "default": "agent",
            "title": "Title",
            "type": "string"
          },
          "rules": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Rules"
          },
          "summarize_model": {
            "default": "chatgpt-azure-4o-mini",
            "description": "Model used to summarize the answer",
            "title": "Summary model",
            "type": "string",
            "widget": "llm_select"
          },
          "rephrase_model": {
            "default": "chatgpt-azure-4o-mini",
            "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
            "title": "Rephrase model",
            "type": "string",
            "widget": "llm_select"
          },
          "max_retries": {
            "default": 1,
            "title": "Max Retries",
            "type": "integer"
          },
          "prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Prompt"
          },
          "model": {
            "default": "chatgpt-azure-4o-mini",
            "title": "Model",
            "type": "string"
          },
          "images": {
            "default": false,
            "title": "Images",
            "type": "boolean"
          },
          "generate_image": {
            "default": false,
            "title": "Generate Image",
            "type": "boolean"
          }
        },
        "title": "GenerateAgentConfig",
        "type": "object"
      }
    ],
    "postprocess": [
      {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "module": {
            "const": "restart",
            "default": "restart",
            "title": "Module",
            "type": "string"
          },
          "title": {
            "default": "agent",
            "title": "Title",
            "type": "string"
          },
          "rules": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Rules"
          },
          "summarize_model": {
            "default": "chatgpt-azure-4o-mini",
            "description": "Model used to summarize the answer",
            "title": "Summary model",
            "type": "string",
            "widget": "llm_select"
          },
          "rephrase_model": {
            "default": "chatgpt-azure-4o-mini",
            "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
            "title": "Rephrase model",
            "type": "string",
            "widget": "llm_select"
          },
          "max_retries": {
            "default": 1,
            "title": "Max Retries",
            "type": "integer"
          },
          "prompt": {
            "title": "Prompt",
            "type": "string"
          },
          "model": {
            "title": "Model",
            "type": "string"
          },
          "retries": {
            "default": 2,
            "title": "Retries",
            "type": "integer"
          }
        },
        "required": ["prompt", "model"],
        "title": "RestartAgentConfig",
        "type": "object"
      },
      {
        "$defs": {
          "AdviceConfig": {
            "properties": {
              "investment_advice": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Investment Advice"
              },
              "legal_advice": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Legal Advice"
              },
              "medical_advice": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Medical Advice"
              },
              "tax_advice": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Tax Advice"
              }
            },
            "title": "AdviceConfig",
            "type": "object"
          },
          "CustomConfig": {
            "properties": {
              "black_list": {
                "items": {
                  "type": "string"
                },
                "title": "Black List",
                "type": "array"
              },
              "patterns": {
                "items": {
                  "type": "string"
                },
                "title": "Patterns",
                "type": "array"
              },
              "topics": {
                "items": {
                  "type": "string"
                },
                "title": "Topics",
                "type": "array"
              }
            },
            "title": "CustomConfig",
            "type": "object"
          },
          "DetectionConfig": {
            "properties": {
              "compliance": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/AdviceConfig"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "custom": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/CustomConfig"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "safety": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Safety"
              },
              "security": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/SecurityConfig"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "sensitive_information": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Sensitive Information"
              }
            },
            "title": "DetectionConfig",
            "type": "object"
          },
          "ExternalCallAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "external",
                "default": "external",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "prompt": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Extra prompt to provide more clues to extract parameters",
                "title": "Extra Prompt"
              },
              "method": {
                "$ref": "#/$defs/Method",
                "default": "POST",
                "description": "POST, GET and PATCH are supported",
                "title": "Request method"
              },
              "description": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Description to help the LLM to extract the parameters",
                "title": "Description of the operation "
              },
              "call_schema": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Valid JSON Schema to define the parameters to call the URL Its incompatible with call_obj and context",
                "title": "JSON Schema to compute parameters "
              },
              "call_obj": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Object that will be used to call the endpoint adding the answer and the question to it. Its incompatible with call_schema and context",
                "title": "Object to call the endpoint "
              },
              "headers": {
                "additionalProperties": {
                  "type": "string"
                },
                "default": {},
                "title": "Headers to use on the API call ",
                "type": "object"
              },
              "model": {
                "default": "chatgpt-azure-4o-mini",
                "title": "Model",
                "type": "string"
              },
              "context": {
                "default": false,
                "description": "Use the context as payload. Its incompatible with call_schema and call_obj",
                "title": "Use context as payload",
                "type": "boolean"
              },
              "url": {
                "description": "",
                "title": "URL to call",
                "type": "string"
              }
            },
            "required": ["url"],
            "title": "ExternalCallAgentConfig",
            "type": "object"
          },
          "Metadata": {
            "properties": {
              "user_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "User Id"
              },
              "environment": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Environment"
              }
            },
            "title": "Metadata",
            "type": "object"
          },
          "Method": {
            "enum": ["POST", "GET", "PATCH"],
            "title": "Method",
            "type": "string"
          },
          "PostprocessAliniaAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "postprocess_alinia",
                "default": "postprocess_alinia",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "preconfig": {
                "$ref": "#/$defs/PostprocessGuardrail",
                "default": "CUSTOM"
              },
              "detection_config": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/DetectionConfig"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "metadata": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Metadata"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              }
            },
            "title": "PostprocessAliniaAgentConfig",
            "type": "object"
          },
          "PostprocessConditionalAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "post_conditional",
                "default": "post_conditional",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "then": {
                "description": "List of agents to run in case the condition is  valid",
                "items": {
                  "discriminator": {
                    "mapping": {
                      "external": "#/$defs/ExternalCallAgentConfig",
                      "post_conditional": "#/$defs/PostprocessConditionalAgentConfig",
                      "postprocess_alinia": "#/$defs/PostprocessAliniaAgentConfig",
                      "remi": "#/$defs/RemiAgentConfig",
                      "restart": "#/$defs/RestartAgentConfig"
                    },
                    "propertyName": "module"
                  },
                  "oneOf": [
                    {
                      "$ref": "#/$defs/RestartAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/RemiAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/ExternalCallAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PostprocessConditionalAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PostprocessAliniaAgentConfig"
                    }
                  ]
                },
                "title": "IF agents",
                "type": "array"
              },
              "else_": {
                "description": "List of agents to run in case the condition is not valid",
                "items": {
                  "discriminator": {
                    "mapping": {
                      "external": "#/$defs/ExternalCallAgentConfig",
                      "post_conditional": "#/$defs/PostprocessConditionalAgentConfig",
                      "postprocess_alinia": "#/$defs/PostprocessAliniaAgentConfig",
                      "remi": "#/$defs/RemiAgentConfig",
                      "restart": "#/$defs/RestartAgentConfig"
                    },
                    "propertyName": "module"
                  },
                  "oneOf": [
                    {
                      "$ref": "#/$defs/RestartAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/RemiAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/ExternalCallAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PostprocessConditionalAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PostprocessAliniaAgentConfig"
                    }
                  ]
                },
                "title": "Else agents",
                "type": "array"
              },
              "prompt": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Prompt"
              },
              "has_keywords": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Has Keywords"
              },
              "similarity": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Similarity"
              },
              "on": {
                "$ref": "#/$defs/Source",
                "default": "QUESTION"
              },
              "model": {
                "default": "chatgpt-o3-mini",
                "title": "Model",
                "type": "string"
              }
            },
            "title": "PostprocessConditionalAgentConfig",
            "type": "object"
          },
          "PostprocessGuardrail": {
            "enum": ["INAPPROPRIATE", "COMPLIANCE", "FINANCIAL_COMPLIANT", "CUSTOM"],
            "title": "PostprocessGuardrail",
            "type": "string"
          },
          "RemiAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "remi",
                "default": "remi",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "then": {
                "description": "List of post process agents to run if its a good validation",
                "items": {
                  "discriminator": {
                    "mapping": {
                      "external": "#/$defs/ExternalCallAgentConfig",
                      "post_conditional": "#/$defs/PostprocessConditionalAgentConfig",
                      "postprocess_alinia": "#/$defs/PostprocessAliniaAgentConfig",
                      "remi": "#/$defs/RemiAgentConfig",
                      "restart": "#/$defs/RestartAgentConfig"
                    },
                    "propertyName": "module"
                  },
                  "oneOf": [
                    {
                      "$ref": "#/$defs/RestartAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/RemiAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/ExternalCallAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PostprocessConditionalAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PostprocessAliniaAgentConfig"
                    }
                  ]
                },
                "title": "If validation is ok",
                "type": "array"
              },
              "else_": {
                "description": "List of post process agents to run if its a bad validation",
                "items": {
                  "discriminator": {
                    "mapping": {
                      "external": "#/$defs/ExternalCallAgentConfig",
                      "post_conditional": "#/$defs/PostprocessConditionalAgentConfig",
                      "postprocess_alinia": "#/$defs/PostprocessAliniaAgentConfig",
                      "remi": "#/$defs/RemiAgentConfig",
                      "restart": "#/$defs/RestartAgentConfig"
                    },
                    "propertyName": "module"
                  },
                  "oneOf": [
                    {
                      "$ref": "#/$defs/RestartAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/RemiAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/ExternalCallAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PostprocessConditionalAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PostprocessAliniaAgentConfig"
                    }
                  ]
                },
                "title": "If validation is not ok",
                "type": "array"
              }
            },
            "title": "RemiAgentConfig",
            "type": "object"
          },
          "RestartAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "restart",
                "default": "restart",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "prompt": {
                "title": "Prompt",
                "type": "string"
              },
              "model": {
                "title": "Model",
                "type": "string"
              },
              "retries": {
                "default": 2,
                "title": "Retries",
                "type": "integer"
              }
            },
            "required": ["prompt", "model"],
            "title": "RestartAgentConfig",
            "type": "object"
          },
          "SecurityConfig": {
            "properties": {
              "adversarial": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Adversarial"
              },
              "gibberish": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Gibberish"
              },
              "under_trained_tokens": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Under Trained Tokens"
              }
            },
            "title": "SecurityConfig",
            "type": "object"
          },
          "Source": {
            "enum": ["QUESTION", "ANSWER", "CONTEXT"],
            "title": "Source",
            "type": "string"
          }
        },
        "$ref": "#/$defs/RemiAgentConfig"
      },
      {
        "$defs": {
          "Method": {
            "enum": ["POST", "GET", "PATCH"],
            "title": "Method",
            "type": "string"
          }
        },
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "module": {
            "const": "external",
            "default": "external",
            "title": "Module",
            "type": "string"
          },
          "title": {
            "default": "agent",
            "title": "Title",
            "type": "string"
          },
          "rules": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Rules"
          },
          "summarize_model": {
            "default": "chatgpt-azure-4o-mini",
            "description": "Model used to summarize the answer",
            "title": "Summary model",
            "type": "string",
            "widget": "llm_select"
          },
          "rephrase_model": {
            "default": "chatgpt-azure-4o-mini",
            "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
            "title": "Rephrase model",
            "type": "string",
            "widget": "llm_select"
          },
          "max_retries": {
            "default": 1,
            "title": "Max Retries",
            "type": "integer"
          },
          "prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Extra prompt to provide more clues to extract parameters",
            "title": "Extra Prompt"
          },
          "method": {
            "$ref": "#/$defs/Method",
            "default": "POST",
            "description": "POST, GET and PATCH are supported",
            "title": "Request method"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Description to help the LLM to extract the parameters",
            "title": "Description of the operation "
          },
          "call_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Valid JSON Schema to define the parameters to call the URL Its incompatible with call_obj and context",
            "title": "JSON Schema to compute parameters "
          },
          "call_obj": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Object that will be used to call the endpoint adding the answer and the question to it. Its incompatible with call_schema and context",
            "title": "Object to call the endpoint "
          },
          "headers": {
            "additionalProperties": {
              "type": "string"
            },
            "default": {},
            "title": "Headers to use on the API call ",
            "type": "object"
          },
          "model": {
            "default": "chatgpt-azure-4o-mini",
            "title": "Model",
            "type": "string"
          },
          "context": {
            "default": false,
            "description": "Use the context as payload. Its incompatible with call_schema and call_obj",
            "title": "Use context as payload",
            "type": "boolean"
          },
          "url": {
            "description": "",
            "title": "URL to call",
            "type": "string"
          }
        },
        "required": ["url"],
        "title": "ExternalCallAgentConfig",
        "type": "object"
      },
      {
        "$defs": {
          "AdviceConfig": {
            "properties": {
              "investment_advice": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Investment Advice"
              },
              "legal_advice": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Legal Advice"
              },
              "medical_advice": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Medical Advice"
              },
              "tax_advice": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Tax Advice"
              }
            },
            "title": "AdviceConfig",
            "type": "object"
          },
          "CustomConfig": {
            "properties": {
              "black_list": {
                "items": {
                  "type": "string"
                },
                "title": "Black List",
                "type": "array"
              },
              "patterns": {
                "items": {
                  "type": "string"
                },
                "title": "Patterns",
                "type": "array"
              },
              "topics": {
                "items": {
                  "type": "string"
                },
                "title": "Topics",
                "type": "array"
              }
            },
            "title": "CustomConfig",
            "type": "object"
          },
          "DetectionConfig": {
            "properties": {
              "compliance": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/AdviceConfig"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "custom": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/CustomConfig"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "safety": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Safety"
              },
              "security": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/SecurityConfig"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "sensitive_information": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Sensitive Information"
              }
            },
            "title": "DetectionConfig",
            "type": "object"
          },
          "ExternalCallAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "external",
                "default": "external",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "prompt": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Extra prompt to provide more clues to extract parameters",
                "title": "Extra Prompt"
              },
              "method": {
                "$ref": "#/$defs/Method",
                "default": "POST",
                "description": "POST, GET and PATCH are supported",
                "title": "Request method"
              },
              "description": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Description to help the LLM to extract the parameters",
                "title": "Description of the operation "
              },
              "call_schema": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Valid JSON Schema to define the parameters to call the URL Its incompatible with call_obj and context",
                "title": "JSON Schema to compute parameters "
              },
              "call_obj": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Object that will be used to call the endpoint adding the answer and the question to it. Its incompatible with call_schema and context",
                "title": "Object to call the endpoint "
              },
              "headers": {
                "additionalProperties": {
                  "type": "string"
                },
                "default": {},
                "title": "Headers to use on the API call ",
                "type": "object"
              },
              "model": {
                "default": "chatgpt-azure-4o-mini",
                "title": "Model",
                "type": "string"
              },
              "context": {
                "default": false,
                "description": "Use the context as payload. Its incompatible with call_schema and call_obj",
                "title": "Use context as payload",
                "type": "boolean"
              },
              "url": {
                "description": "",
                "title": "URL to call",
                "type": "string"
              }
            },
            "required": ["url"],
            "title": "ExternalCallAgentConfig",
            "type": "object"
          },
          "Metadata": {
            "properties": {
              "user_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "User Id"
              },
              "environment": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Environment"
              }
            },
            "title": "Metadata",
            "type": "object"
          },
          "Method": {
            "enum": ["POST", "GET", "PATCH"],
            "title": "Method",
            "type": "string"
          },
          "PostprocessAliniaAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "postprocess_alinia",
                "default": "postprocess_alinia",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "preconfig": {
                "$ref": "#/$defs/PostprocessGuardrail",
                "default": "CUSTOM"
              },
              "detection_config": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/DetectionConfig"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "metadata": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Metadata"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              }
            },
            "title": "PostprocessAliniaAgentConfig",
            "type": "object"
          },
          "PostprocessConditionalAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "post_conditional",
                "default": "post_conditional",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "then": {
                "description": "List of agents to run in case the condition is  valid",
                "items": {
                  "discriminator": {
                    "mapping": {
                      "external": "#/$defs/ExternalCallAgentConfig",
                      "post_conditional": "#/$defs/PostprocessConditionalAgentConfig",
                      "postprocess_alinia": "#/$defs/PostprocessAliniaAgentConfig",
                      "remi": "#/$defs/RemiAgentConfig",
                      "restart": "#/$defs/RestartAgentConfig"
                    },
                    "propertyName": "module"
                  },
                  "oneOf": [
                    {
                      "$ref": "#/$defs/RestartAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/RemiAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/ExternalCallAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PostprocessConditionalAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PostprocessAliniaAgentConfig"
                    }
                  ]
                },
                "title": "IF agents",
                "type": "array"
              },
              "else_": {
                "description": "List of agents to run in case the condition is not valid",
                "items": {
                  "discriminator": {
                    "mapping": {
                      "external": "#/$defs/ExternalCallAgentConfig",
                      "post_conditional": "#/$defs/PostprocessConditionalAgentConfig",
                      "postprocess_alinia": "#/$defs/PostprocessAliniaAgentConfig",
                      "remi": "#/$defs/RemiAgentConfig",
                      "restart": "#/$defs/RestartAgentConfig"
                    },
                    "propertyName": "module"
                  },
                  "oneOf": [
                    {
                      "$ref": "#/$defs/RestartAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/RemiAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/ExternalCallAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PostprocessConditionalAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PostprocessAliniaAgentConfig"
                    }
                  ]
                },
                "title": "Else agents",
                "type": "array"
              },
              "prompt": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Prompt"
              },
              "has_keywords": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Has Keywords"
              },
              "similarity": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Similarity"
              },
              "on": {
                "$ref": "#/$defs/Source",
                "default": "QUESTION"
              },
              "model": {
                "default": "chatgpt-o3-mini",
                "title": "Model",
                "type": "string"
              }
            },
            "title": "PostprocessConditionalAgentConfig",
            "type": "object"
          },
          "PostprocessGuardrail": {
            "enum": ["INAPPROPRIATE", "COMPLIANCE", "FINANCIAL_COMPLIANT", "CUSTOM"],
            "title": "PostprocessGuardrail",
            "type": "string"
          },
          "RemiAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "remi",
                "default": "remi",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "then": {
                "description": "List of post process agents to run if its a good validation",
                "items": {
                  "discriminator": {
                    "mapping": {
                      "external": "#/$defs/ExternalCallAgentConfig",
                      "post_conditional": "#/$defs/PostprocessConditionalAgentConfig",
                      "postprocess_alinia": "#/$defs/PostprocessAliniaAgentConfig",
                      "remi": "#/$defs/RemiAgentConfig",
                      "restart": "#/$defs/RestartAgentConfig"
                    },
                    "propertyName": "module"
                  },
                  "oneOf": [
                    {
                      "$ref": "#/$defs/RestartAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/RemiAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/ExternalCallAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PostprocessConditionalAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PostprocessAliniaAgentConfig"
                    }
                  ]
                },
                "title": "If validation is ok",
                "type": "array"
              },
              "else_": {
                "description": "List of post process agents to run if its a bad validation",
                "items": {
                  "discriminator": {
                    "mapping": {
                      "external": "#/$defs/ExternalCallAgentConfig",
                      "post_conditional": "#/$defs/PostprocessConditionalAgentConfig",
                      "postprocess_alinia": "#/$defs/PostprocessAliniaAgentConfig",
                      "remi": "#/$defs/RemiAgentConfig",
                      "restart": "#/$defs/RestartAgentConfig"
                    },
                    "propertyName": "module"
                  },
                  "oneOf": [
                    {
                      "$ref": "#/$defs/RestartAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/RemiAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/ExternalCallAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PostprocessConditionalAgentConfig"
                    },
                    {
                      "$ref": "#/$defs/PostprocessAliniaAgentConfig"
                    }
                  ]
                },
                "title": "If validation is not ok",
                "type": "array"
              }
            },
            "title": "RemiAgentConfig",
            "type": "object"
          },
          "RestartAgentConfig": {
            "properties": {
              "id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Id"
              },
              "module": {
                "const": "restart",
                "default": "restart",
                "title": "Module",
                "type": "string"
              },
              "title": {
                "default": "agent",
                "title": "Title",
                "type": "string"
              },
              "rules": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Rules"
              },
              "summarize_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to summarize the answer",
                "title": "Summary model",
                "type": "string",
                "widget": "llm_select"
              },
              "rephrase_model": {
                "default": "chatgpt-azure-4o-mini",
                "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
                "title": "Rephrase model",
                "type": "string",
                "widget": "llm_select"
              },
              "max_retries": {
                "default": 1,
                "title": "Max Retries",
                "type": "integer"
              },
              "prompt": {
                "title": "Prompt",
                "type": "string"
              },
              "model": {
                "title": "Model",
                "type": "string"
              },
              "retries": {
                "default": 2,
                "title": "Retries",
                "type": "integer"
              }
            },
            "required": ["prompt", "model"],
            "title": "RestartAgentConfig",
            "type": "object"
          },
          "SecurityConfig": {
            "properties": {
              "adversarial": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Adversarial"
              },
              "gibberish": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Gibberish"
              },
              "under_trained_tokens": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Under Trained Tokens"
              }
            },
            "title": "SecurityConfig",
            "type": "object"
          },
          "Source": {
            "enum": ["QUESTION", "ANSWER", "CONTEXT"],
            "title": "Source",
            "type": "string"
          }
        },
        "$ref": "#/$defs/PostprocessConditionalAgentConfig"
      },
      {
        "$defs": {
          "AdviceConfig": {
            "properties": {
              "investment_advice": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Investment Advice"
              },
              "legal_advice": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Legal Advice"
              },
              "medical_advice": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Medical Advice"
              },
              "tax_advice": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Tax Advice"
              }
            },
            "title": "AdviceConfig",
            "type": "object"
          },
          "CustomConfig": {
            "properties": {
              "black_list": {
                "items": {
                  "type": "string"
                },
                "title": "Black List",
                "type": "array"
              },
              "patterns": {
                "items": {
                  "type": "string"
                },
                "title": "Patterns",
                "type": "array"
              },
              "topics": {
                "items": {
                  "type": "string"
                },
                "title": "Topics",
                "type": "array"
              }
            },
            "title": "CustomConfig",
            "type": "object"
          },
          "DetectionConfig": {
            "properties": {
              "compliance": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/AdviceConfig"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "custom": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/CustomConfig"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "safety": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Safety"
              },
              "security": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/SecurityConfig"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "sensitive_information": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Sensitive Information"
              }
            },
            "title": "DetectionConfig",
            "type": "object"
          },
          "Metadata": {
            "properties": {
              "user_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "User Id"
              },
              "environment": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Environment"
              }
            },
            "title": "Metadata",
            "type": "object"
          },
          "PostprocessGuardrail": {
            "enum": ["INAPPROPRIATE", "COMPLIANCE", "FINANCIAL_COMPLIANT", "CUSTOM"],
            "title": "PostprocessGuardrail",
            "type": "string"
          },
          "SecurityConfig": {
            "properties": {
              "adversarial": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Adversarial"
              },
              "gibberish": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Gibberish"
              },
              "under_trained_tokens": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Under Trained Tokens"
              }
            },
            "title": "SecurityConfig",
            "type": "object"
          }
        },
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "module": {
            "const": "postprocess_alinia",
            "default": "postprocess_alinia",
            "title": "Module",
            "type": "string"
          },
          "title": {
            "default": "agent",
            "title": "Title",
            "type": "string"
          },
          "rules": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Rules"
          },
          "summarize_model": {
            "default": "chatgpt-azure-4o-mini",
            "description": "Model used to summarize the answer",
            "title": "Summary model",
            "type": "string",
            "widget": "llm_select"
          },
          "rephrase_model": {
            "default": "chatgpt-azure-4o-mini",
            "description": "Model used to rephrase the question based on context (only used in agents that follow others in a chain)",
            "title": "Rephrase model",
            "type": "string",
            "widget": "llm_select"
          },
          "max_retries": {
            "default": 1,
            "title": "Max Retries",
            "type": "integer"
          },
          "preconfig": {
            "$ref": "#/$defs/PostprocessGuardrail",
            "default": "CUSTOM"
          },
          "detection_config": {
            "anyOf": [
              {
                "$ref": "#/$defs/DetectionConfig"
              },
              {
                "type": "null"
              }
            ],
            "default": null
          },
          "metadata": {
            "anyOf": [
              {
                "$ref": "#/$defs/Metadata"
              },
              {
                "type": "null"
              }
            ],
            "default": null
          }
        },
        "title": "PostprocessAliniaAgentConfig",
        "type": "object"
      }
    ]
  },
  "drivers": [
    {
      "$defs": {
        "BraveInnerConfig": {
          "properties": {
            "endpoint": {
              "default": "web",
              "title": "Endpoint",
              "type": "string"
            },
            "key": {
              "title": "Key",
              "type": "string"
            }
          },
          "required": ["key"],
          "title": "BraveInnerConfig",
          "type": "object"
        }
      },
      "properties": {
        "id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Id"
        },
        "identifier": {
          "title": "Identifier",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "type": "string"
        },
        "provider": {
          "const": "brave",
          "title": "Provider",
          "type": "string"
        },
        "config": {
          "$ref": "#/$defs/BraveInnerConfig"
        }
      },
      "required": ["identifier", "name", "provider", "config"],
      "title": "BraveDriverConfig",
      "type": "object"
    },
    {
      "$defs": {
        "CypherInnerConfig": {
          "properties": {
            "username": {
              "title": "Username",
              "type": "string"
            },
            "url": {
              "title": "Url",
              "type": "string"
            },
            "timeout": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Timeout"
            },
            "enhanced_schema": {
              "default": true,
              "title": "Enhanced Schema",
              "type": "boolean"
            },
            "database": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Database"
            },
            "config": {
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "default": {},
              "title": "Config",
              "type": "object"
            },
            "password": {
              "title": "Password",
              "type": "string"
            }
          },
          "required": ["username", "url", "password"],
          "title": "CypherInnerConfig",
          "type": "object"
        }
      },
      "properties": {
        "id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Id"
        },
        "identifier": {
          "title": "Identifier",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "type": "string"
        },
        "provider": {
          "const": "cypher",
          "title": "Provider",
          "type": "string"
        },
        "config": {
          "$ref": "#/$defs/CypherInnerConfig"
        }
      },
      "required": ["identifier", "name", "provider", "config"],
      "title": "CypherDriverConfig",
      "type": "object"
    },
    {
      "$defs": {
        "NucliaDBConnection": {
          "properties": {
            "url": {
              "title": "Url",
              "type": "string"
            },
            "manager": {
              "title": "Manager",
              "type": "string"
            },
            "filters": {
              "default": [],
              "items": {
                "type": "string"
              },
              "title": "Filters",
              "type": "array"
            },
            "description": {
              "title": "Description",
              "type": "string"
            },
            "kbid": {
              "title": "Kbid",
              "type": "string"
            },
            "key": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Key"
            }
          },
          "required": ["url", "manager", "description", "kbid"],
          "title": "NucliaDBConnection",
          "type": "object"
        }
      },
      "properties": {
        "id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Id"
        },
        "identifier": {
          "title": "Identifier",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "type": "string"
        },
        "provider": {
          "const": "nucliadb",
          "title": "Provider",
          "type": "string"
        },
        "config": {
          "$ref": "#/$defs/NucliaDBConnection"
        }
      },
      "required": ["identifier", "name", "provider", "config"],
      "title": "NucliaDBConfig",
      "type": "object"
    },
    {
      "$defs": {
        "PerplexityInnerConfig": {
          "properties": {
            "key": {
              "title": "Key",
              "type": "string"
            }
          },
          "required": ["key"],
          "title": "PerplexityInnerConfig",
          "type": "object"
        }
      },
      "properties": {
        "id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Id"
        },
        "identifier": {
          "title": "Identifier",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "type": "string"
        },
        "provider": {
          "const": "perplexity",
          "title": "Provider",
          "type": "string"
        },
        "config": {
          "$ref": "#/$defs/PerplexityInnerConfig"
        }
      },
      "required": ["identifier", "name", "provider", "config"],
      "title": "PerplexityDriverConfig",
      "type": "object"
    },
    {
      "$defs": {
        "TavilyInnerConfig": {
          "properties": {
            "key": {
              "title": "Key",
              "type": "string"
            }
          },
          "required": ["key"],
          "title": "TavilyInnerConfig",
          "type": "object"
        }
      },
      "properties": {
        "id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Id"
        },
        "identifier": {
          "title": "Identifier",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "type": "string"
        },
        "provider": {
          "const": "tavily",
          "title": "Provider",
          "type": "string"
        },
        "config": {
          "$ref": "#/$defs/TavilyInnerConfig"
        }
      },
      "required": ["identifier", "name", "provider", "config"],
      "title": "TavilyDriverConfig",
      "type": "object"
    },
    {
      "$defs": {
        "SQLInnerConfig": {
          "properties": {
            "sql_schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Sql Schema"
            },
            "dsn": {
              "title": "Dsn",
              "type": "string"
            }
          },
          "required": ["dsn"],
          "title": "SQLInnerConfig",
          "type": "object"
        }
      },
      "properties": {
        "id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Id"
        },
        "identifier": {
          "title": "Identifier",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "type": "string"
        },
        "provider": {
          "const": "sql",
          "title": "Provider",
          "type": "string"
        },
        "config": {
          "$ref": "#/$defs/SQLInnerConfig"
        }
      },
      "required": ["identifier", "name", "provider", "config"],
      "title": "SQLDriverConfig",
      "type": "object"
    },
    {
      "$defs": {
        "GoogleInnerConfig": {
          "properties": {
            "vertexai": {
              "title": "Vertexai",
              "type": "boolean"
            },
            "project": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Project"
            },
            "location": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Location"
            },
            "api_key": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Api Key"
            },
            "credentials": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Credentials"
            }
          },
          "required": ["vertexai"],
          "title": "GoogleInnerConfig",
          "type": "object"
        }
      },
      "properties": {
        "id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Id"
        },
        "identifier": {
          "title": "Identifier",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "type": "string"
        },
        "provider": {
          "const": "google",
          "title": "Provider",
          "type": "string"
        },
        "config": {
          "$ref": "#/$defs/GoogleInnerConfig"
        }
      },
      "required": ["identifier", "name", "provider", "config"],
      "title": "GoogleDriverConfig",
      "type": "object"
    },
    {
      "$defs": {
        "MCPStdioInnerConfig": {
          "properties": {
            "server": {
              "$ref": "#/$defs/MCPStdioServer"
            },
            "env": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Env"
            }
          },
          "required": ["server"],
          "title": "MCPStdioInnerConfig",
          "type": "object"
        },
        "MCPStdioServer": {
          "enum": ["github"],
          "title": "MCPStdioServer",
          "type": "string"
        }
      },
      "properties": {
        "id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Id"
        },
        "provider": {
          "const": "mcpstdio",
          "title": "Provider",
          "type": "string"
        },
        "identifier": {
          "default": "mcpstdio",
          "title": "Identifier",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "type": "string"
        },
        "config": {
          "$ref": "#/$defs/MCPStdioInnerConfig"
        }
      },
      "required": ["provider", "name", "config"],
      "title": "MCPStdioDriverConfig",
      "type": "object"
    },
    {
      "$defs": {
        "MCPSSEInnerConfig": {
          "properties": {
            "uri": {
              "title": "Uri",
              "type": "string"
            },
            "headers": {
              "additionalProperties": {
                "type": "string"
              },
              "default": {},
              "title": "Headers",
              "type": "object"
            },
            "timeout": {
              "default": 5,
              "title": "Timeout",
              "type": "number"
            },
            "sse_read_timeout": {
              "default": 300,
              "title": "Sse Read Timeout",
              "type": "number"
            }
          },
          "required": ["uri"],
          "title": "MCPSSEInnerConfig",
          "type": "object"
        }
      },
      "properties": {
        "id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Id"
        },
        "identifier": {
          "title": "Identifier",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "type": "string"
        },
        "provider": {
          "const": "mcpsse",
          "title": "Provider",
          "type": "string"
        },
        "config": {
          "$ref": "#/$defs/MCPSSEInnerConfig"
        }
      },
      "required": ["identifier", "name", "provider", "config"],
      "title": "MCPSSEDriverConfig",
      "type": "object"
    },
    {
      "$defs": {
        "MCPHTTPInnerConfig": {
          "properties": {
            "uri": {
              "title": "Uri",
              "type": "string"
            },
            "headers": {
              "additionalProperties": {
                "type": "string"
              },
              "default": {},
              "title": "Headers",
              "type": "object"
            },
            "timeout": {
              "default": 5,
              "title": "Timeout",
              "type": "number"
            },
            "sse_read_timeout": {
              "default": 300,
              "title": "SSE read timeout in seconds",
              "type": "number"
            },
            "ca_certificate": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "CA certificate for HTTPS"
            },
            "crt_certificate": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "CRT certificate for HTTPS"
            },
            "server_url": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "OAuth Authorization Server URL"
            },
            "redirect_uris": {
              "items": {
                "type": "string"
              },
              "title": "OAuth Redirect URIs",
              "type": "array"
            },
            "auth_server_url": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "OAuth Authorization Server URL"
            },
            "grant_types": {
              "description": "Default: ['authorization_code', 'refresh_token']",
              "items": {
                "type": "string"
              },
              "title": "OAuth Grant Types",
              "type": "array"
            },
            "response_types": {
              "description": "Default: ['code']",
              "items": {
                "type": "string"
              },
              "title": "OAuth Response Types",
              "type": "array"
            },
            "scope": {
              "default": "user",
              "description": "Default: 'user'",
              "title": "OAuth Scopes",
              "type": "string"
            }
          },
          "required": ["uri"],
          "title": "MCPHTTPInnerConfig",
          "type": "object"
        }
      },
      "properties": {
        "id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Id"
        },
        "identifier": {
          "title": "Identifier",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "type": "string"
        },
        "provider": {
          "const": "mcphttp",
          "title": "Provider",
          "type": "string"
        },
        "config": {
          "$ref": "#/$defs/MCPHTTPInnerConfig"
        }
      },
      "required": ["identifier", "name", "provider", "config"],
      "title": "MCPHTTPDriverConfig",
      "type": "object"
    },
    {
      "$defs": {
        "AliniaInnerConfig": {
          "properties": {
            "key": {
              "title": "Key",
              "type": "string"
            }
          },
          "required": ["key"],
          "title": "AliniaInnerConfig",
          "type": "object"
        }
      },
      "properties": {
        "id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Id"
        },
        "identifier": {
          "title": "Identifier",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "type": "string"
        },
        "provider": {
          "const": "alinia",
          "title": "Provider",
          "type": "string"
        },
        "config": {
          "$ref": "#/$defs/AliniaInnerConfig"
        }
      },
      "required": ["identifier", "name", "provider", "config"],
      "title": "AliniaDriverConfig",
      "type": "object"
    }
  ]
}
